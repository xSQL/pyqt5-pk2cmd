[{'Comment': 'Standard 12V Vpp 100ms delay after entering.\r\nDrop Vpp & retake high to try entry on parts with internal MCLR & osc, and ICSP pin(s) high outputs.', 'ScriptVersion': 5, 'UNUSED1': 0, 'ScriptName': 'HVProgEntry1', 'Script': [43770, 43767, 43769, 43765, 43763, 47872, 43752, 20, 43766, 43771, 43751, 127, 43767, 43770, 43771, 43766, 43752, 19], 'ScriptLength': 18, 'ScriptNumber': 1}, {'Comment': 'Standard 12V programming mode exit\r\nEnsure /MCLR for 50ms,\r\nleave /MCLR enabled.', 'ScriptVersion': 4, 'UNUSED1': 0, 'ScriptName': 'HVProgExit1', 'Script': [43770, 43767, 43768, 43763, 47875, 43752, 10, 43764], 'ScriptLength': 8, 'ScriptNumber': 2}, {'Comment': 'Read Device ID for Midrange.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_RdDevID1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47877, 43758, 47878, 47876, 43760, 43760], 'ScriptLength': 18, 'ScriptNumber': 3}, {'Comment': 'Erase progmem (09) & EE(0B), int timed 10ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_ChpEraseEE10msI', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47881, 43752, 47874, 43758, 47878, 47883, 43752, 47874], 'ScriptLength': 17, 'ScriptNumber': 4}, {'Comment': 'Progmem read 32 words, rd(04) adrInc(06)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_ProgMemRd32.1', 'Script': [43758, 47878, 47876, 43760, 43760, 43758, 47878, 47878, 43753, 47880, 31], 'ScriptLength': 11, 'ScriptNumber': 5}, {'Comment': 'read EE(05) data 32 bytes.  AdrInc(06)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_EERd32.1', 'Script': [43758, 47878, 47877, 43760, 43760, 43758, 47878, 47878, 43753, 47880, 31], 'ScriptLength': 11, 'ScriptNumber': 6}, {'Comment': 'LdCfg(0) Read Progmem(04), AddrInc(06)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_UsrIDRd4.1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47876, 43760, 43760, 43758, 47878, 47878, 43753, 47880, 47875], 'ScriptLength': 18, 'ScriptNumber': 7}, {'Comment': 'Rd 1 Cfg Wrd. Rd PrgMem(04) AdrInc(06)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CfgRd1.1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47876, 43760, 43760], 'ScriptLength': 18, 'ScriptNumber': 8}, {'Comment': 'Wr x8 int timed 2.5ms.  LdPrgMem(02), AdrInc(06), BeginPrg(08)', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'MR_PrgMemWr8Int.1', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43753, 47880, 47878, 43758, 47878, 47880, 43751, 141, 43758, 47878, 47878], 'ScriptLength': 24, 'ScriptNumber': 9}, {'Comment': '1byte write int timed 5.5ms.  LdEE(03), BeginPrg(08), AdrInc(06)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_EEWr1Int.1', 'Script': [43758, 47878, 47875, 43761, 43761, 43758, 47878, 47880, 43752, 1, 43758, 47878, 47878], 'ScriptLength': 13, 'ScriptNumber': 10}, {'Comment': 'Int timed write 2.5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_UsrIDWrInt.1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 141, 43758, 47878, 47878, 43753, 13, 47875], 'ScriptLength': 23, 'ScriptNumber': 11}, {'Comment': 'Wr 1 Cfg Word Int timed 2.5ms\r\nLdCfg(0) IncAdr(6) BgnPrg(8)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CfgWr1Int.1', 'Script': [43758, 47878, 47872, 43761, 43761, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47880, 43751, 141], 'ScriptLength': 16, 'ScriptNumber': 12}, {'Comment': 'Wr x4 int timed 2.5ms.  LdPrgMem(02), AdrInc(06), BeginPrg(08)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_PrgMemWr4Int.1', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43753, 47880, 47874, 43758, 47878, 47880, 43751, 118, 43758, 47878, 47878], 'ScriptLength': 24, 'ScriptNumber': 13}, {'Comment': 'ICSPCLK drop halt', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'DBG_Halt.1', 'Script': [43763, 47876, 43751, 47, 43763, 47872, 43751, 5, 43763, 47873], 'ScriptLength': 10, 'ScriptNumber': 14}, {'Comment': 'Read debug exec version cmd 02', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'DBG_RdDEVer.1', 'Script': [43765, 43743, 47874, 43744, 43750, 47872, 47877, 43744, 43744, 43744, 43764], 'ScriptLength': 11, 'ScriptNumber': 15}, {'Comment': 'Target run - cmd 19', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'DBG_Run.1', 'Script': [43765, 43743, 47897, 43744, 43764, 43750, 47872, 47876, 43747, 43744], 'ScriptLength': 10, 'ScriptNumber': 16}, {'Comment': 'Bulk Write Data cmd 04', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'DBG_BulkWrData.1', 'Script': [43765, 43743, 47876, 43744, 43750, 47872, 12, 43742, 43742, 43742, 43742, 43742, 43741, 47873, 43764, 43747, 43744, 43764], 'ScriptLength': 18, 'ScriptNumber': 17}, {'Comment': 'Bulk Read Data cmd 03', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'DBG_BulkRdData.1', 'Script': [43765, 43743, 47875, 43744, 43750, 47872, 12, 43742, 43742, 43742, 43742, 43744, 43741, 47873, 43764, 43747, 43744, 43764], 'ScriptLength': 18, 'ScriptNumber': 18}, {'Comment': 'Single Step cmd 1A', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'DBG_SStep.1', 'Script': [43765, 43743, 47898, 43744, 43764, 43750, 47872, 47876, 43747, 43744], 'ScriptLength': 10, 'ScriptNumber': 19}, {'Comment': 'ICSPCLK state - running/halted.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'DBG_Status.1', 'Script': [43740], 'ScriptLength': 1, 'ScriptNumber': 20}, {'Comment': 'Delay 100ms\r\n500us MLCR pulse\r\n1ms delay after first MCLR pulse for RESET sync.\r\nPIC24 code sequence\r\n4D434851\r\nDelay 50ms\r\nPlus extra 5 bits for 1st SIX', 'ScriptVersion': 2, 'UNUSED1': 0, 'ScriptName': '24_ProgEntry.1', 'Script': [43770, 43767, 43769, 43765, 43763, 47872, 43752, 20, 43766, 43771, 43751, 23, 43770, 43767, 43751, 47, 43762, 48050, 43762, 48066, 43762, 47890, 43762, 48010, 43766, 43771, 43752, 9, 43758, 47877, 47872], 'ScriptLength': 31, 'ScriptNumber': 21}, {'Comment': 'Reads Revision as well (in second pair of bytes)', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': '24_RdDevID.1', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 48112, 47887, 47904, 43737, 48016, 47873, 48008, 43737, 47878, 47872, 47904, 43736, 43736, 43737, 47879, 47872, 47904, 43737, 48054, 47883, 48058, 43736, 43736, 43737, 47904, 47932, 48008, 43736, 43735, 43736, 43753, 13, 47873], 'ScriptLength': 50, 'ScriptNumber': 22}, {'Comment': 'Sets address according to 3 bytes in dl buffer', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '24_SetAddr.1', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43732, 47878, 43731, 47872, 43737, 48016, 47873, 48008, 43737, 47943, 47992, 47904, 43736], 'ScriptLength': 29, 'ScriptNumber': 23}, {'Comment': 'Reads 32 3-byte words', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '24_ProgMemRd32.1', 'Script': [43737, 48022, 47883, 48058, 43736, 43736, 43735, 43737, 48054, 48011, 48058, 43736, 43736, 43758, 47876, 47873, 43762, 47872, 43734, 43759, 43753, 20, 31, 43737, 47872, 47874, 47876, 43736], 'ScriptLength': 28, 'ScriptNumber': 24}, {'Comment': 'mov #404F, W10\r\nmov W10, NVMCON\r\nBSET.b NVMCON+1, #7\r\n256 NOPs ~13ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '24_ChpErase450ms.1', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 48122, 47876, 47908, 43737, 47882, 47931, 48008, 43737, 47969, 48103, 48040, 43736, 43737, 47872, 47874, 47876, 43736, 43753, 47873, 47872, 43752, 80], 'ScriptLength': 39, 'ScriptNumber': 25}, {'Comment': 'Set NVMCON = x4001\r\nloads TBLPAG, W7 with dest address.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '24_ProgMemWrPrep.1', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 47898, 47872, 47908, 43737, 47882, 47931, 48008, 43732, 47879, 43731, 47872, 43737, 48016, 47873, 48008, 43736], 'ScriptLength': 33, 'ScriptNumber': 26}, {'Comment': 'loads W0-W3 with data from dld_buffer\r\nTBLWTL W0, [W7]\r\nTBLWTH W1, [W7++]\r\nTBLWTH W2, [W7]\r\nTBLWTL W3, [W7++]\r\nneeds NOPS at end for clks to complete prog\r\nP13 = 2ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '24_ProgMemWr64.1', 'Script': [43732, 47872, 43731, 47873, 43732, 47875, 43731, 47874, 43737, 48000, 47883, 48059, 43736, 43736, 43737, 48001, 48027, 48059, 43736, 43736, 43737, 48002, 48011, 48059, 43736, 43736, 43737, 48003, 47899, 48059, 43736, 43736, 43753, 32, 31, 43737, 47969, 48103, 48040, 43736, 43737, 47872, 47874, 47876, 43736, 43753, 47873, 3, 43751, 48228], 'ScriptLength': 50, 'ScriptNumber': 27}, {'Comment': 'Writes 1 word at a time, int timed 2.5ms.\r\nLdPrgMem(02), AdrInc(06), BeginPrg(08)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_ProgMemWr1Int.1', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 118, 43758, 47878, 47878], 'ScriptLength': 13, 'ScriptNumber': 28}, {'Comment': '3 byte address in DL Buffer.  RdPrgMem(04), AdrInc(06)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_RdOSCCAL.1', 'Script': [43748, 47877, 43758, 47878, 47878, 43741, 47875, 43739, 43758, 47878, 47876, 43760, 43760], 'ScriptLength': 13, 'ScriptNumber': 29}, {'Comment': '3 byte address followed by OSCCAL word in DL buffer.\r\nInt Timed 2.5ms\r\nLdPrgMem(02), AdrInc(06), BeginPrg(08)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_WrOSCCALInt.1', 'Script': [43748, 47877, 43758, 47878, 47878, 43741, 47875, 43739, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 118], 'ScriptLength': 18, 'ScriptNumber': 30}, {'Comment': '3 byte address Set in DL Buffer. AdrInc(06)\r\nGoes out and in to Prog mode to reset counter.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_AddrSet.1', 'Script': [43770, 43767, 43751, 94, 43766, 43771, 43751, 47, 43748, 47877, 43758, 47878, 47878, 43741, 47875, 43739], 'ScriptLength': 16, 'ScriptNumber': 31}, {'Comment': 'Wr x8 int timed 3ms.  LdPrgMem(02), AdrInc(06), BeginPrg(08)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_PrgMemWr8Int.2', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43753, 47880, 47878, 43758, 47878, 47880, 43751, 141, 43758, 47878, 47878], 'ScriptLength': 24, 'ScriptNumber': 32}, {'Comment': 'Int timed write 3ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_UsrIDWrInt.2', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 141, 43758, 47878, 47878, 43753, 13, 47875], 'ScriptLength': 23, 'ScriptNumber': 33}, {'Comment': 'Rd 2 Cfg Wrds. LdCfg(0) Rd PrgMem(04) AdrInc(06)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CfgRd2.1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47876, 43760, 43760, 43758, 47878, 47878, 43753, 47880, 47873], 'ScriptLength': 24, 'ScriptNumber': 34}, {'Comment': 'Wr 2 Cfg Words Int timed 5.3ms (for 72x)\r\nLoadCfg(0) AddInc(6) LdProg(2) BgnProg(8)', 'ScriptVersion': 2, 'UNUSED1': 0, 'ScriptName': 'MR_CfgWr2Int.1', 'Script': [43758, 47878, 47872, 43761, 43761, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47880, 43751, 240, 43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 250], 'ScriptLength': 29, 'ScriptNumber': 35}, {'Comment': 'IncAddr(06), RdPrgMem(04)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_PrgMemRd32.1', 'Script': [43758, 47878, 47878, 43758, 47878, 47876, 43760, 43760, 43753, 47880, 31], 'ScriptLength': 11, 'ScriptNumber': 36}, {'Comment': 'RdPrgMem(04)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_CfgRd1.1', 'Script': [43758, 47878, 47876, 43760, 43760], 'ScriptLength': 5, 'ScriptNumber': 37}, {'Comment': 'Increments to address 1024\r\nIncAddr(06) RdPrgMem(04)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_UsrIDRd4@x400', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 47878, 43758, 47878, 47876, 43760, 43760, 43753, 47880, 47875], 'ScriptLength': 26, 'ScriptNumber': 38}, {'Comment': '3-byte address in DLBuf\r\nIncAddr(06) RdPrgMem(04)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_OSCCALRd1.1', 'Script': [43758, 47878, 47878, 43741, 47875, 43739, 43758, 47878, 47876, 43760, 43760], 'ScriptLength': 11, 'ScriptNumber': 39}, {'Comment': 'Ext Timed 2ms\r\nIncAddr(06) LdProgMem(02) BgnProg(8) EndPrg(E)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_PrgMemWr1Ext.1', 'Script': [43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47886], 'ScriptLength': 16, 'ScriptNumber': 40}, {'Comment': 'Advances address to 2048 and does bulk erase (9). Int timed 10ms.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_ChpErase@x800', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 47878, 43758, 47878, 47881, 43752, 47874], 'ScriptLength': 38, 'ScriptNumber': 41}, {'Comment': 'increments addr to 0x400.\r\nExt timed 2ms.  \r\nTDIS= 100us\r\nIncAddr(6) LdProgMem(02) BgnProg(8) EndProg(E)', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'BL_UsrIDWr4Ext@x400', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47886, 43751, 47877, 43753, 18, 47875], 'ScriptLength': 36, 'ScriptNumber': 42}, {'Comment': 'Ext Timed 2ms. LdPrgMem(2), BgnProg(8) EndPrg(E)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_CfgWr1Ext', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47886], 'ScriptLength': 13, 'ScriptNumber': 43}, {'Comment': '3 byte address in DL buffer. \r\nExt timed 2ms. \r\nAdrInc(6) LdPrg(02) BgPrg(8) EndPrg(E)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_OSCCALWrExt', 'Script': [43758, 47878, 47878, 43741, 47875, 43739, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47886], 'ScriptLength': 19, 'ScriptNumber': 44}, {'Comment': 'Advances address to 256 and does bulk erase (9). Int timed 10ms.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_ChpErase@x100', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 63, 43758, 47878, 47878, 43758, 47878, 47881, 43752, 47874], 'ScriptLength': 23, 'ScriptNumber': 45}, {'Comment': 'Advances address to 512 and does bulk erase (9). Int timed 10ms.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_ChpErase@x200', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 127, 43758, 47878, 47878, 43758, 47878, 47881, 43752, 47874], 'ScriptLength': 23, 'ScriptNumber': 46}, {'Comment': 'Increments to address 256\r\nIncAddr(06) RdPrgMem(04)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_UsrIDRd4@x100', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 63, 43758, 47878, 47878, 43758, 47878, 47876, 43760, 43760, 43753, 47880, 47875], 'ScriptLength': 26, 'ScriptNumber': 47}, {'Comment': 'Increments to address 512\r\nIncAddr(06) RdPrgMem(04)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_UsrIDRd4@x200', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 127, 43758, 47878, 47878, 43758, 47878, 47876, 43760, 43760, 43753, 47880, 47875], 'ScriptLength': 26, 'ScriptNumber': 48}, {'Comment': 'increments addr to 256.\r\nExt timed 2ms. \r\nTDIS= 100us\r\nIncAddr(6) LdProgMem(02) BgnProg(8) EndProg(E)', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'BL_UsrIDWr4Ext@x100', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 63, 43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47886, 43751, 47877, 43753, 18, 47875], 'ScriptLength': 36, 'ScriptNumber': 49}, {'Comment': 'increments addr to 512\r\nExt timed 2ms.  \r\nTDIS= 100us\r\nIncAddr(6) LdProgMem(02) BgnProg(8) EndProg(E)', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'BL_UsrIDWr4Ext@x200', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 127, 43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47886, 43751, 47877, 43753, 18, 47875], 'ScriptLength': 36, 'ScriptNumber': 50}, {'Comment': 'Increments address to 2048. \r\nExt timed 2ms\r\nTDIS= 100us\r\nIncAddr(6) LdPrgMem(2) BgnPrg(8) EndProg(E)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_UsrIDWr4Ext@x800', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 6, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47886, 43751, 47877, 43753, 18, 47875], 'ScriptLength': 51, 'ScriptNumber': 51}, {'Comment': 'Increments to address \r\n2048\r\nIncAddr(06) RdPrgMem(04)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_UsrIDRd4@x800', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 47878, 43758, 47878, 47876, 43760, 43760, 43753, 47880, 47875], 'ScriptLength': 41, 'ScriptNumber': 52}, {'Comment': '4 words Ext Timed 2ms\r\nIncAddr(06) LdProgMem(02) BgnProg(8) EndPrg(E)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_PrgMemWr4Ext.1', 'Script': [43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43753, 47880, 47875, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47886], 'ScriptLength': 19, 'ScriptNumber': 53}, {'Comment': 'Advances address to 1024 and does bulk erase (9). Int timed 10ms.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_ChpErase@x400', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 47878, 43758, 47878, 47881, 43752, 47874], 'ScriptLength': 23, 'ScriptNumber': 54}, {'Comment': 'Read device ID from addresses 0x3FFFFE & 0x3FFFFF\r\nRewritten April08 to prevent erasing 16F problem. & prevent 16F EE/userID write problem.', 'ScriptVersion': 3, 'UNUSED1': 0, 'ScriptName': '18F_DevIDRd.1', 'Script': [43738, 47914, 47886, 43738, 47893, 47881, 43738, 47872, 47872, 43738, 48120, 47982, 43738, 48042, 47886, 43738, 47957, 47882, 43738, 48119, 47982, 43738, 48042, 47886, 43738, 47956, 47881, 43738, 47872, 47872, 43738, 48118, 47982, 43758, 47876, 47881, 43762, 47872, 43760, 43738, 48127, 48127, 43753, 47881, 47873], 'ScriptLength': 45, 'ScriptNumber': 55}, {'Comment': 'Reads 64 words of program memory.\r\nThe first byte is read twice, with the first read thrown away - this fixes the EBTR bug.', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': '18F_PrgMemRd64', 'Script': [43758, 47876, 47880, 43762, 47872, 43759, 43758, 47876, 47881, 43762, 47872, 43760, 43753, 6, 127], 'ScriptLength': 15, 'ScriptNumber': 56}, {'Comment': 'Sets TBLPTR(L:H:U) to 3-byte address in DL buffer', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_SetAddr.1', 'Script': [43758, 47876, 47872, 43761, 43762, 47886, 43738, 48118, 47982, 43758, 47876, 47872, 43761, 43762, 47886, 43738, 48119, 47982, 43758, 47876, 47872, 43761, 43762, 47886, 43738, 48120, 47982], 'ScriptLength': 27, 'ScriptNumber': 57}, {'Comment': 'Sets up EECON1 and EEADR for EE at 3-byte address in DL Buf.  \r\nFor reading EEs of 256 bytes or less.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_EERdPrepSmall.1', 'Script': [43738, 48038, 48030, 43738, 48038, 48028, 43758, 47876, 47872, 43761, 43762, 47886, 43739, 43739, 43738, 48041, 47982], 'ScriptLength': 17, 'ScriptNumber': 58}, {'Comment': 'Sets EECON1, RD, moves EEDATA -> TABLAT, shifts out, increments EEADDR.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_EERd32Small.1', 'Script': [43738, 48038, 48000, 43738, 48040, 47952, 43738, 48117, 47982, 43758, 47876, 47874, 43762, 47872, 43760, 43738, 48041, 47914, 43753, 18, 31], 'ScriptLength': 21, 'ScriptNumber': 59}, {'Comment': 'Sets TBLPTR = x30.00.00 and reads 7 words\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_CfgRd7.1', 'Script': [43738, 47920, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47872, 47886, 43738, 48118, 47982, 43758, 47876, 47881, 43762, 47872, 43760, 43753, 47878, 13], 'ScriptLength': 27, 'ScriptNumber': 60}, {'Comment': 'Sets TBLPTR = x20.00.00 and reads 4 words.\r\n\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_UsrIDRd4.1', 'Script': [43738, 47904, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47872, 47886, 43738, 48118, 47982, 43758, 47876, 47881, 43762, 47872, 43760, 43753, 47878, 7], 'ScriptLength': 27, 'ScriptNumber': 61}, {'Comment': 'writes 0x80 to 0x3C.00.04\r\n\r\nP11 = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_ChpErase.x80', 'Script': [43738, 47932, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47876, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 48000, 43762, 48000, 43738, 47872, 47872, 43758, 47876, 47872, 43752, 47873, 43762, 47872, 43762, 47872], 'ScriptLength': 37, 'ScriptNumber': 62}, {'Comment': 'Sets TBLPTR(L:H:U) to 3-byte address in DL buffer. Sets EECON1.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_PrgMemWrPrep.1', 'Script': [43758, 47876, 47872, 43761, 43762, 47886, 43738, 48118, 47982, 43758, 47876, 47872, 43761, 43762, 47886, 43738, 48119, 47982, 43758, 47876, 47872, 43761, 43762, 47886, 43738, 48120, 47982, 43738, 48038, 48014, 43738, 48038, 48028], 'ScriptLength': 33, 'ScriptNumber': 63}, {'Comment': 'loads 4 words, then programs, then advances pointer.\r\n\r\nP9 = 1ms.\r\nP10 = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_ProgMemWr4.1ms', 'Script': [43758, 47876, 47885, 43761, 43761, 43753, 47877, 47874, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 47, 43763, 47872, 43751, 47877, 43762, 47872, 43762, 47872, 43758, 47876, 47885, 43762, 48127, 43762, 48127], 'ScriptLength': 35, 'ScriptNumber': 64}, {'Comment': 'Sets TBLPTR = x20.00.00, sets EECON1, and writes 4 words.\r\n\r\nP9 = 1ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_UsrIDWr4.1ms', 'Script': [43738, 47904, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 48118, 47982, 43738, 48038, 48014, 43738, 48038, 48028, 43758, 47876, 47885, 43761, 43761, 43753, 47877, 47874, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 47, 43763, 47872, 43762, 47872, 43762, 47872], 'ScriptLength': 47, 'ScriptNumber': 65}, {'Comment': 'Sets up EECON1, executes GOTO 0x10.00.00, TBLPTR = 0x30.00.00', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_CfgWrPrep', 'Script': [43738, 48038, 48014, 43738, 48038, 48012, 43738, 47872, 48111, 43738, 47872, 48120, 43738, 47920, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 48118, 47982, 43739, 43739, 43739], 'ScriptLength': 30, 'ScriptNumber': 66}, {'Comment': '(writes LSB, incf TBLPTRL, writes MSB, incf TBLPTRL) x 7\r\n\r\nP9 = 1ms\r\nP10 = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_CfgWr7_1ms', 'Script': [43758, 47876, 47887, 43761, 43762, 47872, 43758, 47875, 47872, 43763, 47876, 43751, 47, 43763, 47872, 43751, 47877, 43762, 47872, 43762, 47872, 43738, 48118, 47914, 43758, 47876, 47887, 43762, 47872, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 47, 43763, 47872, 43751, 47877, 43762, 47872, 43762, 47872, 43738, 48118, 47914, 43753, 48, 6], 'ScriptLength': 51, 'ScriptNumber': 67}, {'Comment': 'clrf TBLPTRU\r\nSet EECON1, Set EEADDR based on 3-byte address in DL Buf', 'ScriptVersion': 2, 'UNUSED1': 0, 'ScriptName': '18F_EEWrPrepSmall', 'Script': [43738, 48120, 47978, 43738, 48038, 48030, 43738, 48038, 48028, 43758, 47876, 47872, 43761, 43762, 47886, 43738, 48041, 47982, 43739, 43739], 'ScriptLength': 20, 'ScriptNumber': 68}, {'Comment': '1 byte EE write. EEDATA = byte, 0x55->EECON2, 0xAA->EECON2, bsf EECON1, WR\r\nincf EEADR\r\nP11=5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_EEWr1Small5ms', 'Script': [43758, 47876, 47872, 43761, 43762, 47886, 43738, 48040, 47982, 43738, 48038, 48004, 43738, 47957, 47886, 43738, 48039, 47982, 43738, 48042, 47886, 43738, 48039, 47982, 43738, 48038, 48002, 43738, 47872, 47872, 43738, 47872, 47872, 43752, 47873, 43738, 48041, 47914], 'ScriptLength': 38, 'ScriptNumber': 69}, {'Comment': 'PIC18J code sequence\r\n4D434850\r\nMCLR hi pulse 500us\r\nDelay 1ms after first MCLR high pulse (P19)\r\nfor RESET sync\r\nDelay 5ms\r\n', 'ScriptVersion': 2, 'UNUSED1': 0, 'ScriptName': '18J_ProgEntry', 'Script': [43770, 43767, 43769, 43765, 43763, 47872, 43752, 20, 43766, 43771, 43751, 23, 43770, 43767, 43751, 47, 43762, 48050, 43762, 48066, 43762, 47890, 43762, 47882, 43766, 43771, 43751, 235], 'ScriptLength': 28, 'ScriptNumber': 70}, {'Comment': 'write x0101 to x3C.00.05, write x8080 to x3C.00.04, PGC low for 400ms.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18J_ChpErase400ms', 'Script': [43738, 47932, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47877, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 47873, 43762, 47873, 43738, 47876, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 48000, 43762, 48000, 43738, 47872, 47872, 43758, 47876, 47872, 43752, 74, 43762, 47872, 43762, 47872, 43752, 47897], 'ScriptLength': 52, 'ScriptNumber': 71}, {'Comment': 'LdCfg(0) IncAdr(6) BgnPrg(18) EndPrg(A)\r\nTprog = 2.5ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CfgWr1Ext.1', 'Script': [43758, 47878, 47872, 43761, 43761, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47896, 43751, 118, 43758, 47878, 47882, 43751, 47877], 'ScriptLength': 21, 'ScriptNumber': 72}, {'Comment': 'Wr 2 Words Int timed 3ms to 0x2004 and 0x2005. \r\nLoadCfg(0) AddInc(6) LdProg(2) BgnProg(8)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_DbgVctWr2Int.1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47875, 43758, 47878, 2, 43761, 43761, 43758, 47878, 47880, 43751, 141, 43758, 47878, 47878, 43753, 13, 47873], 'ScriptLength': 29, 'ScriptNumber': 73}, {'Comment': 'Rd 2 Wrds from 0x2004, 0x2005. Rd PrgMem(04) AdrInc(06)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_DbgVctRd2.1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47875, 43758, 47878, 47876, 43760, 43760, 43758, 47878, 47878, 43753, 47880, 47873], 'ScriptLength': 24, 'ScriptNumber': 74}, {'Comment': 'Sets TBLPTR(L:H:U) to 3-byte address in DL buffer. Sets EECON1, WREN.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18J_PrgMemWrPrep', 'Script': [43758, 47876, 47872, 43761, 43762, 47886, 43738, 48118, 47982, 43758, 47876, 47872, 43761, 43762, 47886, 43738, 48119, 47982, 43758, 47876, 47872, 43761, 43762, 47886, 43738, 48120, 47982, 43738, 48038, 48004], 'ScriptLength': 30, 'ScriptNumber': 75}, {'Comment': 'loads 32 words, then programs, then advances pointer.\r\n\r\nP9 = 10ms.\r\nP10 = 400ns', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18J_PrgMemWr32.10ms', 'Script': [43758, 47876, 47885, 43761, 43761, 43753, 47877, 30, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43752, 1, 43751, 214, 43763, 47872, 43762, 47872, 43762, 47872, 43758, 47876, 47885, 43762, 48127, 43762, 48127], 'ScriptLength': 35, 'ScriptNumber': 76}, {'Comment': 'Erase progmem (09), int timed 10ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_ChpErase10ms', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47881, 43752, 47874], 'ScriptLength': 12, 'ScriptNumber': 77}, {'Comment': 'LdPrgMem(2), IncAdr(6), BgnPrg(18), EndPrg(A)\r\nTprog = 2.5ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_PrgMemWr4Ext.1', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47878, 43753, 47880, 47874, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 118, 43758, 47878, 47882, 43751, 47877, 43758, 47878, 47878], 'ScriptLength': 29, 'ScriptNumber': 78}, {'Comment': 'LdCfg(0) LdPrgM(2) IncAdr(6) BgnPrg(18) EndPrg(A)\r\nTprog = 2.5ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_UsrIDWr4Ext.1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 118, 43758, 47878, 47882, 43751, 47877, 43758, 47878, 47878, 43753, 18, 47875], 'ScriptLength': 28, 'ScriptNumber': 79}, {'Comment': 'Wr 1 Cfg Word Int timed 2.5ms\r\nUSES LOADPROGMEM\r\nLdCfg(0) LdPrgMem(2) IncAdr(6) BgnPrg(8)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CfgWr1Int.2', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 141], 'ScriptLength': 23, 'ScriptNumber': 80}, {'Comment': 'LdPrgMem(2), IncAdr(6), BgnPrg(8), EndPrg(E)\r\nTprog = 1ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_PrgMemWr2Ext.1', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 47, 43758, 47878, 47886, 43751, 47877, 43758, 47878, 47878], 'ScriptLength': 26, 'ScriptNumber': 81}, {'Comment': 'Erase progmem (09), int timed 30ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_ChpErase30ms', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47881, 43752, 47878], 'ScriptLength': 12, 'ScriptNumber': 82}, {'Comment': 'LdCfg(0) LdPrgM(2) IncAdr(6) BgnPrg(8) EndPrg(E)\r\nTprog = 1ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_UsrIDWr4Ext.2', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 47, 43758, 47878, 47886, 43751, 47877, 43758, 47878, 47878, 43753, 18, 47875], 'ScriptLength': 28, 'ScriptNumber': 83}, {'Comment': 'LdCfg(0) LdPrgMem(2) IncAdr(6) BgnPrg(8) EndPrg(E)\r\nTprog = 1ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CfgWr1Ext.2', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 47, 43758, 47878, 47886, 43751, 47877], 'ScriptLength': 28, 'ScriptNumber': 84}, {'Comment': 'LdCfg(0) LdPrgMem(2) IncAdr(6) BgnPrg(8) EndPrg(E)\r\nTprog = 1ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CfgWr2Ext.2', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 47, 43758, 47878, 47886, 43751, 47877, 43758, 47878, 47878, 43753, 18, 47873], 'ScriptLength': 34, 'ScriptNumber': 85}, {'Comment': '"Chip Erase" command (1F)\r\nTera = 10ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_ChpErase"Chip"1F', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47903, 43752, 47874], 'ScriptLength': 12, 'ScriptNumber': 86}, {'Comment': 'LdPrgMem(2), IncAdr(6), BgnPrg(18), EndPrg(17)\r\nTprog = 2ms\r\nTDIS = 100us', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'MR_PrgMemWr4Ext.2', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47878, 43753, 47880, 47874, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 94, 43758, 47878, 47895, 43751, 47877, 43758, 47878, 47878], 'ScriptLength': 29, 'ScriptNumber': 87}, {'Comment': 'LdCfg(0) LdPrgM(2) IncAdr(6) BgnPrg(18) EndPrg(17)\r\nTprog = 2ms\r\nTDIS = 100us', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'MR_UsrIDWr4Ext.3', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 94, 43758, 47878, 47895, 43751, 47877, 43758, 47878, 47878, 43753, 18, 47875], 'ScriptLength': 28, 'ScriptNumber': 88}, {'Comment': 'LdCfg(0) LdPrgMem(2) IncAdr(6) BgnPrg(18) EndPrg(17)\r\nTprog = 2ms\r\nTDIS = 100us', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'MR_CfgWr2Ext.3', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 94, 43758, 47878, 47895, 43751, 5, 43758, 47878, 47878, 43753, 18, 47873], 'ScriptLength': 34, 'ScriptNumber': 89}, {'Comment': 'LdEE(03), BgnErs(8), BeginPrg(18), AdrInc(06), EndPrg(17)\r\nTprog = 2ms\r\nTprog2 = 4ms', 'ScriptVersion': 2, 'UNUSED1': 0, 'ScriptName': 'MR_EEWr1Ext.1', 'Script': [43758, 47878, 47875, 43761, 43761, 43758, 47878, 47880, 43751, 188, 43758, 47878, 47895, 43758, 47878, 47896, 43751, 94, 43758, 47878, 47895, 43758, 47878, 47878], 'ScriptLength': 24, 'ScriptNumber': 90}, {'Comment': 'LdCfg(0) LdPrgMem(2) IncAdr(6) BgnPrg(18) EndPrg(17)\r\nTprog = 2ms\r\nTDIS = 100us', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'MR_CfgWr1Ext.3', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 94, 43758, 47878, 47895, 43751, 5], 'ScriptLength': 28, 'ScriptNumber': 91}, {'Comment': 'LdPrgMem(2), IncAdr(6), BgnPrg(18), EndPrg(17)\r\nTprog = 1ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_PrgMemWr8Ext.2', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47878, 43753, 47880, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 47, 43758, 47878, 47895, 43751, 47877, 43758, 47878, 47878], 'ScriptLength': 29, 'ScriptNumber': 92}, {'Comment': 'writes 0x3F8F to 0x3C.00.04 - 05\r\n\r\nP11 = 5ms', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': '18F_ChpErase.x3F8F', 'Script': [43738, 47932, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47877, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 47935, 43762, 47935, 43738, 47876, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 48015, 43762, 48015, 43738, 47872, 47872, 43758, 47876, 47872, 43752, 47873, 43762, 47872, 43762, 47872], 'ScriptLength': 50, 'ScriptNumber': 93}, {'Comment': 'loads 8 words, then programs, then advances pointer.\r\n\r\nP9 = 1ms.\r\nP10 = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_ProgMemWr8.1ms', 'Script': [43758, 47876, 47885, 43761, 43761, 43753, 47877, 47878, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 47, 43763, 47872, 43751, 47877, 43762, 47872, 43762, 47872, 43758, 47876, 47885, 43762, 48127, 43762, 48127], 'ScriptLength': 35, 'ScriptNumber': 94}, {'Comment': 'writes 0xFF87 to 0x3C.00.04 - 05\r\n\r\nP11 = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_ChpErase.xFF87', 'Script': [43738, 47932, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47877, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 48127, 43762, 48127, 43738, 47876, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 48007, 43762, 48007, 43738, 47872, 47872, 43758, 47876, 47872, 43752, 47873, 43762, 47872, 43762, 47872], 'ScriptLength': 50, 'ScriptNumber': 95}, {'Comment': 'loads 32 words, then programs, then advances pointer.\r\n\r\nP9 = 1ms.\r\nP10 = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_ProgMemWr32.1ms-', 'Script': [43758, 47876, 47885, 43761, 43761, 43753, 47877, 30, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 47, 43763, 47872, 43751, 47877, 43762, 47872, 43762, 47872, 43758, 47876, 47885, 43762, 48127, 43762, 48127], 'ScriptLength': 35, 'ScriptNumber': 96}, {'Comment': 'Sets up EECON1 and EEADRH:L for EE at 3-byte address in DL Buf.\r\nDoes dummy read.\r\nFor reading EEs of more than 256 bytes.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_EERdPrepLarge.1', 'Script': [43738, 48038, 48030, 43738, 48038, 48028, 43758, 47876, 47872, 43761, 43762, 47886, 43738, 48041, 47982, 43758, 47876, 47872, 43761, 43762, 47886, 43738, 48042, 47982, 43739, 43738, 48025, 47886, 43738, 48117, 47982], 'ScriptLength': 31, 'ScriptNumber': 97}, {'Comment': 'Sets EECON1, RD, moves EEDATA -> TABLAT, shifts out, increments EEADDRH:L.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_EERd32Large.1', 'Script': [43738, 48038, 48000, 43738, 48040, 47952, 43738, 48117, 47982, 43738, 47872, 47872, 43738, 47872, 47872, 43758, 47876, 47874, 43762, 47872, 43760, 43738, 48041, 47914, 43738, 48088, 48048, 43738, 48042, 47914, 43753, 30, 31], 'ScriptLength': 33, 'ScriptNumber': 98}, {'Comment': 'clrf TBLPTRU\r\nSet EECON1, Set EEADDRH:L based on 3-byte address in DL Buf\r\nEECON1, WREN = 1', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': '18F_EEWrPrepLarge.1', 'Script': [43738, 48120, 47978, 43738, 48038, 48030, 43738, 48038, 48028, 43758, 47876, 47872, 43761, 43762, 47886, 43738, 48041, 47982, 43758, 47876, 47872, 43761, 43762, 47886, 43738, 48042, 47982, 43739], 'ScriptLength': 28, 'ScriptNumber': 99}, {'Comment': '1 byte EE write. EEDATA = byte, bsf EECON1, WR\r\nincf EEADRH:L\r\nP11=5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_EEWr1Large5ms', 'Script': [43758, 47876, 47872, 43761, 43762, 47886, 43738, 48040, 47982, 43738, 48038, 48004, 43738, 48038, 48002, 43738, 47872, 47872, 43753, 47875, 47875, 43752, 1, 43738, 47872, 47872, 43738, 48041, 47914, 43738, 48088, 48048, 43738, 48042, 47914], 'ScriptLength': 35, 'ScriptNumber': 100}, {'Comment': 'LdCfg(0), IncAdr(6), BulkEraseSetup1(1), BlkErsStup2(7), BgnErase(8), LdEE(3). Wont erase EE if no CP/DP set, so erase EE', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_ChpErase87x', 'Script': [43758, 47878, 47872, 43762, 48126, 43762, 47999, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47873, 43758, 47878, 47879, 43758, 47878, 47880, 43752, 47874, 43758, 47878, 47873, 43758, 47878, 47879, 43752, 47874, 43758, 47878, 47875, 43762, 48126, 43762, 47999, 43758, 47878, 47873, 43758, 47878, 47879, 43758, 47878, 47880, 43752, 47874, 43758, 47878, 47873, 43758, 47878, 47879], 'ScriptLength': 56, 'ScriptNumber': 101}, {'Comment': 'RowErase(x11)\r\nTera = 6ms\r\nthen advance PC 16x', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_RowErase16.1', 'Script': [43758, 47878, 47889, 43752, 47873, 43751, 25, 43758, 47878, 47878, 43753, 47875, 15], 'ScriptLength': 13, 'ScriptNumber': 102}, {'Comment': 'loads 16 words, then programs, then advances pointer.\r\n\r\nP9 = 1ms.\r\nP10 = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_ProgMemWr16.1ms', 'Script': [43758, 47876, 47885, 43761, 43761, 43753, 47877, 14, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 47, 43763, 47872, 43751, 47877, 43762, 47872, 43762, 47872, 43758, 47876, 47885, 43762, 48127, 43762, 48127], 'ScriptLength': 35, 'ScriptNumber': 103}, {'Comment': 'loads 32 words, then programs, then advances pointer.\r\n\r\nP9 = 1ms.\r\nP10 = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_ProgMemWr32.1ms', 'Script': [43758, 47876, 47885, 43761, 43761, 43753, 47877, 30, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 47, 43763, 47872, 43751, 47877, 43762, 47872, 43762, 47872, 43758, 47876, 47885, 43762, 48127, 43762, 48127], 'ScriptLength': 35, 'ScriptNumber': 104}, {'Comment': 'Writes 1 word at a time, int timed 4ms.\r\nLdPrgMem(02), AdrInc(06), BeginPrg(18)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_ProgMemWr1Int.2', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 188, 43758, 47878, 47878], 'ScriptLength': 13, 'ScriptNumber': 105}, {'Comment': 'Int timed write 4ms\r\nLdCfg(0), AdrInc(6), LdPrg(2), BgnPrg(18)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_UsrIDWrInt.3', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 188, 43758, 47878, 47878, 43753, 13, 47875], 'ScriptLength': 23, 'ScriptNumber': 106}, {'Comment': 'Wr 1 Cfg Word Int timed 4ms\r\nUSES LOADPROGMEM\r\nLdCfg(0) LdPrgMem(2) IncAdr(6) BgnPrg(18)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CfgWr1Int.2', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 188], 'ScriptLength': 23, 'ScriptNumber': 107}, {'Comment': '1 byte EE write. EEDATA = byte, 0x55->EECON2, 0xAA->EECON2, bsf EECON1, WR\r\nincf EEADR\r\nP11=5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_EEWr1LargeAA55', 'Script': [43758, 47876, 47872, 43761, 43762, 47886, 43738, 48040, 47982, 43738, 48038, 48004, 43738, 47957, 47886, 43738, 48039, 47982, 43738, 48042, 47886, 43738, 48039, 47982, 43738, 48038, 48002, 43738, 47872, 47872, 43738, 47872, 47872, 43752, 47873, 43738, 48041, 47914, 43738, 48088, 48048, 43738, 48042, 47914], 'ScriptLength': 44, 'ScriptNumber': 108}, {'Comment': 'LdPrgMem(2), IncAdr(6), BgnPrg(18), EndPrg(A)\r\nTprog = 2.5ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_ProgMemWr1Ext.1', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 118, 43758, 47878, 47882, 43751, 47877, 43758, 47878, 47878], 'ScriptLength': 18, 'ScriptNumber': 109}, {'Comment': 'Erase all flash progmem (09) NOT EE, int timed 10ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_PMemErase10msI', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47881, 43752, 47874], 'ScriptLength': 12, 'ScriptNumber': 110}, {'Comment': 'Erase Program & Config memory, NOT EE\r\nTprog3 = 2ms\r\nEraseProgMem(9), BgnErase(8), EndPrg(17)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_PMemEraseExt', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47881, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47895], 'ScriptLength': 18, 'ScriptNumber': 111}, {'Comment': 'Sets NVMADRU:NVMADR = 0x0080:05C0\r\nThis is the Unit ID address, so it gets erased with the Bulk Erase.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_ChpErasePrep', 'Script': [43736, 43736, 43737, 47872, 47873, 47876, 43736, 43737, 47878, 47964, 47904, 43737, 47894, 47931, 48008, 43737, 47878, 47880, 47904, 43737, 47910, 47931, 48008], 'ScriptLength': 23, 'ScriptNumber': 112}, {'Comment': 'LdCfg(0), IncAdr(6), BulkEraseSetup1(1), BlkErsStup2(7), BgnErase(8)Wont erase EE if no CP/DP set.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_PMemErase87x', 'Script': [43758, 47878, 47872, 43762, 48126, 43762, 47999, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47873, 43758, 47878, 47879, 43758, 47878, 47880, 43752, 47874, 43758, 47878, 47873, 43758, 47878, 47879, 43752, 47874], 'ScriptLength': 32, 'ScriptNumber': 113}, {'Comment': 'Erase EE only\r\nTprog3 = 2ms\r\nEraseDataMem(B), BgnErase(8), EndPrg(17)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_EEMemEraseExt', 'Script': [43758, 47878, 47883, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47895], 'ScriptLength': 11, 'ScriptNumber': 114}, {'Comment': 'writes 0x0F83 to 0x3C.00.04 - 05\r\nerases all except EE\r\nP11 = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_PMemErase.xF83', 'Script': [43738, 47932, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47877, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 47887, 43762, 47887, 43738, 47876, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 48003, 43762, 48003, 43738, 47872, 47872, 43758, 47876, 47872, 43752, 47873, 43762, 47872, 43762, 47872], 'ScriptLength': 50, 'ScriptNumber': 115}, {'Comment': 'writes 0x83 to 0x3C.00.04\r\n\r\nP11 = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_EraseTest2', 'Script': [48082, 48003, 48082, 48008, 43738, 47932, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47876, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43761, 43762, 47872, 43738, 47872, 47872, 43758, 47876, 47872, 43752, 47873, 43762, 47872, 43762, 47872, 43753, 36, 47873], 'ScriptLength': 43, 'ScriptNumber': 116}, {'Comment': 'writes 0xFF83 to 0x3C.00.04 - 05\r\nErases all except EE.\r\n\r\nP11 = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_PMemErase.xFF83', 'Script': [43738, 47932, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47877, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 48127, 43762, 48127, 43738, 47876, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 48003, 43762, 48003, 43738, 47872, 47872, 43758, 47876, 47872, 43752, 47873, 43762, 47872, 43762, 47872], 'ScriptLength': 50, 'ScriptNumber': 117}, {'Comment': 'LdPrgMem(2), IncAdr(6), BgnPrg(18), EndPrg(E)\r\nTprog = 2ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_PrgMemWr4Ext.3', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47878, 43753, 47880, 47874, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 94, 43758, 47878, 47886, 43751, 47877, 43758, 47878, 47878], 'ScriptLength': 29, 'ScriptNumber': 118}, {'Comment': 'LdCfg(0) LdPrgM(2) IncAdr(6) BgnPrg(18) EndPrg(E)\r\nTprog = 2.5ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_UsrIDWr4Ext.4', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 118, 43758, 47878, 47886, 43751, 47877, 43758, 47878, 47878, 43753, 18, 47875], 'ScriptLength': 28, 'ScriptNumber': 119}, {'Comment': "LdCfg(0) IncAdr(6) BgnPrg(18) EndPrg(E)\r\nTprog = 2.5ms\r\nTDIS = 100us\r\nWrite 1 past config word, else part can't be read without a POR", 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'MR_CfgWr1Ext.4', 'Script': [43758, 47878, 47872, 43761, 43761, 43758, 47878, 47878, 43753, 47875, 47878, 43758, 47878, 47896, 43751, 118, 43758, 47878, 47886, 43751, 47877, 43758, 47878, 47878, 43753, 13, 1], 'ScriptLength': 27, 'ScriptNumber': 120}, {'Comment': 'dsPIC33/PIC24H read 8 config words.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '33_CfgRd8', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 48000, 47887, 47904, 43737, 48016, 47873, 48008, 43737, 47872, 47875, 48107, 43737, 47943, 47992, 47904, 43736, 43737, 48054, 47883, 48058, 43736, 43736, 43735, 43753, 47880, 47879, 43737, 47872, 47874, 47876, 43736], 'ScriptLength': 48, 'ScriptNumber': 121}, {'Comment': 'dsPIC33/PIC24H read 4 UserID bytes.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '33_UserIDRd4', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 48000, 47887, 47904, 43737, 48016, 47873, 48008, 43737, 47878, 47873, 47904, 43737, 47943, 47992, 47904, 43736, 43737, 48054, 47883, 48058, 43736, 43736, 43758, 47876, 47873, 43762, 47872, 43734, 43759, 43753, 13, 47875, 43737, 47872, 47874, 47876, 43736], 'ScriptLength': 54, 'ScriptNumber': 122}, {'Comment': 'loads W0-W3 with data from dld_buffer\r\nTBLWTL W0, [W7]\r\nTBLWTH W1, [W7++]\r\nTBLWTH W2, [W7]\r\nTBLWTL W3, [W7++]\r\nneeds NOPS at end for clks to complete prog\r\nP13 = 1.5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '33_ProgMemWr64.1', 'Script': [43732, 47872, 43731, 47873, 43732, 47875, 43731, 47874, 43737, 48000, 47883, 48059, 43736, 43736, 43737, 48001, 48027, 48059, 43736, 43736, 43737, 48002, 48011, 48059, 43736, 43736, 43737, 48003, 47899, 48059, 43736, 43736, 43753, 32, 31, 43737, 47969, 48103, 48040, 43736, 43737, 47872, 47874, 47876, 43736, 43753, 47873, 3, 43751, 72], 'ScriptLength': 50, 'ScriptNumber': 123}, {'Comment': 'Writes the 4 User IDs for dsPIC33/PIC24H\r\nExt timed programming 30ms.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '33_UsrIDWr4', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 47879, 47873, 47904, 43737, 47882, 47872, 47908, 43737, 47882, 47931, 48008, 43737, 48000, 47887, 47904, 43737, 48016, 47873, 48008, 43731, 47872, 43737, 48000, 47899, 48059, 43736, 43736, 43737, 47969, 48103, 48040, 43736, 43736, 43752, 47878, 43737, 47969, 48103, 48041, 43736, 43753, 21, 47875], 'ScriptLength': 60, 'ScriptNumber': 124}, {'Comment': 'Writes the 8 Config Bytes for dsPIC33/PIC24H\r\nExternal Programming 30ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '33_CfgWr8', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 47879, 47872, 47904, 43737, 47882, 47872, 47908, 43737, 47882, 47931, 48008, 43737, 48000, 47887, 47904, 43737, 48016, 47873, 48008, 43732, 47872, 43737, 48000, 47899, 48059, 43736, 43736, 43737, 47969, 48103, 48040, 43736, 43736, 43752, 6, 43737, 47969, 48103, 48041, 43736, 43753, 21, 47879], 'ScriptLength': 60, 'ScriptNumber': 125}, {'Comment': 'Erase progmem (09) NOT EE, int timed 15ms\r\nBgnPrg(08)\r\nldcfg with 0x3FFF', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_PMemErase15msI', 'Script': [43758, 47878, 47872, 43762, 48126, 43762, 47999, 43758, 47878, 47881, 43758, 47878, 47880, 43752, 47875], 'ScriptLength': 15, 'ScriptNumber': 126}, {'Comment': 'Wr x4 int timed 3ms.  LdPrgMem(02), AdrInc(06), BeginPrg(08)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_PrgMemWr4Int.2', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43753, 47880, 47874, 43758, 47878, 47880, 43751, 141, 43758, 47878, 47878], 'ScriptLength': 24, 'ScriptNumber': 127}, {'Comment': 'writes 0x018A to 0x3C.00.04 - 05\r\n\r\nP11 = 30ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_ChpErase.x018A', 'Script': [43738, 47932, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47877, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 47873, 43762, 47873, 43738, 47876, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 48010, 43762, 48010, 43738, 47872, 47872, 43758, 47876, 47872, 43752, 47878, 43762, 47872, 43762, 47872], 'ScriptLength': 50, 'ScriptNumber': 128}, {'Comment': 'loads 8 words, then programs, then advances pointer.\r\n\r\nP9 = 2ms.\r\nP10 = 120us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_ProgMemWr8.2ms', 'Script': [43758, 47876, 47885, 43761, 43761, 43753, 47877, 6, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 94, 43763, 47872, 43751, 47878, 43762, 47872, 43762, 47872, 43758, 47876, 47885, 43762, 48127, 43762, 48127], 'ScriptLength': 35, 'ScriptNumber': 129}, {'Comment': '(writes LSB, incf TBLPTRL, writes MSB, incf TBLPTRL) x 7\r\n\r\nP9 = 2ms\r\nP10 = 120us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_CfgWr7_2ms', 'Script': [43738, 48038, 48004, 43758, 47876, 47887, 43761, 43762, 47872, 43758, 47875, 47872, 43763, 47876, 43751, 94, 43763, 47872, 43751, 12, 43762, 47872, 43762, 47872, 43738, 47872, 47872, 43738, 48118, 47914, 43758, 47876, 47887, 43762, 47872, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 94, 43763, 47872, 43751, 47890, 43762, 47872, 43762, 47872, 43738, 47872, 47872, 43738, 48118, 47914, 43753, 54, 6], 'ScriptLength': 60, 'ScriptNumber': 130}, {'Comment': 'Sets TBLPTR = x20.00.00, sets EECON1, and writes 4 words.\r\n\r\nP9 = 2ms\r\nP11 = 120us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_UsrIDWr4.2ms', 'Script': [43738, 47904, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 48118, 47982, 43738, 48038, 48028, 43738, 48038, 48004, 43758, 47876, 47885, 43761, 43761, 43753, 47877, 47874, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 94, 43763, 47872, 43762, 47872, 43762, 47872, 43751, 47878], 'ScriptLength': 49, 'ScriptNumber': 131}, {'Comment': 'Rd 8 words from test memory.\r\nA "LdCfg" command is a prerequisite.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_TstMemRd8', 'Script': [43758, 47878, 47876, 43760, 43760, 43758, 47878, 47878, 43753, 47880, 47879], 'ScriptLength': 11, 'ScriptNumber': 132}, {'Comment': '', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30S_UsrIDRdPrep', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 47878, 47964, 47904, 43737, 47872, 47880, 47904, 43737, 48016, 47873, 48008, 43737, 47943, 47992, 47904, 43736], 'ScriptLength': 33, 'ScriptNumber': 133}, {'Comment': 'IncAddr(06), RdPrgMem(04)\r\npre-req: increment to TestMem', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_TestMemRd8', 'Script': [43758, 47878, 47878, 43758, 47878, 47876, 43760, 43760, 43753, 47880, 7], 'ScriptLength': 11, 'ScriptNumber': 134}, {'Comment': 'reads 8 words.\r\n\r\nPre-req: Set TBLPTR = x20.00.00\r\n\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_TstMemRd8.1', 'Script': [43758, 47876, 47881, 43762, 47872, 43760, 43753, 47878, 15], 'ScriptLength': 9, 'ScriptNumber': 135}, {'Comment': 'Erase all flash progmem (09), including Cal Words NOT EE, int timed 10ms.\r\nErase & write Cal @2008\r\nErase & write Cal @2009', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CalWrdsErWr91x', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47879, 43758, 47878, 47881, 43752, 47874, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 141, 43758, 47878, 47878, 43758, 47878, 47881, 43752, 47874, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 141], 'ScriptLength': 46, 'ScriptNumber': 136}, {'Comment': 'Erase all flash progmem (09), including Cal Words NOT EE, int timed 10ms.\r\nErase & write Cal @2009', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CalWrdsErWr88x', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47880, 43758, 47878, 47881, 43752, 47874, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 141], 'ScriptLength': 28, 'ScriptNumber': 137}, {'Comment': 'Erase all flash progmem (09), including Cal Words NOT EE, int timed 10ms.\r\nErase & write Cal @2008', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CalWrdsErWr6xx-1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47879, 43758, 47878, 47881, 43752, 47874, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 141], 'ScriptLength': 28, 'ScriptNumber': 138}, {'Comment': 'Erase progmem & cal (09), int timed 10ms\r\nWr Cal @ 2008', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CalWrdErWr61x', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47879, 43758, 47878, 47881, 43752, 47874, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 118, 43758, 47878, 47882, 43751, 47877], 'ScriptLength': 33, 'ScriptNumber': 139}, {'Comment': 'Read Dev ID from\r\n0xFF0000, and Rev from 0xFF0001', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': '30_RdDevID', 'Script': [43736, 43736, 43737, 47872, 47873, 47876, 43736, 43753, 47879, 47873, 43737, 48112, 47887, 47904, 43737, 48016, 47873, 48008, 43737, 47878, 47872, 47904, 43736, 43736, 43737, 48000, 47875, 48107, 43737, 48054, 47883, 48058, 43736, 43736, 43736, 43736, 43737, 47904, 47932, 48008, 43736, 43758, 47876, 47873, 43762, 47872, 43760, 43760, 43736, 43753, 21, 47873], 'ScriptLength': 52, 'ScriptNumber': 140}, {'Comment': 'mov #407F, W10\r\nmov W10, NVMCON\r\n55AA -> NVMKEY\r\nBSET.b NVMCON+1, #7\r\nBCLR.b NVMCON+1, #7', 'ScriptVersion': 2, 'UNUSED1': 0, 'ScriptName': '30_ChpErase10ms', 'Script': [43736, 43736, 43737, 47872, 47873, 47876, 43736, 43737, 48122, 47879, 47908, 43737, 47882, 47931, 48008, 43737, 47960, 47877, 47904, 43737, 48041, 47882, 47904, 43737, 47928, 47931, 48008, 43737, 47929, 47931, 48008, 43737, 47969, 48103, 48040, 43736, 43736, 43736, 43736, 43752, 2, 43737, 47969, 48103, 48041, 43736, 43736, 43736, 43736], 'ScriptLength': 49, 'ScriptNumber': 141}, {'Comment': 'Sets address according to 3 bytes in DL buffer\r\n1) in TBLPAG & W6\r\n2) in NVMADRH:L\r\nSets W5 = 0x20', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': '30_SetAddr.1', 'Script': [43736, 43736, 43737, 47872, 47873, 47876, 43736, 43753, 47879, 47873, 43732, 47878, 43731, 47872, 43737, 48016, 47873, 48008, 43737, 47894, 47931, 48008, 43737, 47904, 47931, 48008, 43737, 47877, 47874, 47904, 43737, 47943, 47992, 47904, 43736], 'ScriptLength': 35, 'ScriptNumber': 142}, {'Comment': 'Reads 32 3-byte words', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_ProgMemRd32.1', 'Script': [43737, 48022, 47883, 48058, 43736, 43736, 43758, 47876, 47873, 43762, 47872, 43760, 43760, 43737, 48054, 48011, 48058, 43736, 43736, 43758, 47876, 47873, 43762, 47872, 43760, 43759, 43753, 26, 31, 43737, 47872, 47873, 47876, 43736], 'ScriptLength': 34, 'ScriptNumber': 143}, {'Comment': 'Reads config words from\r\n0xF80000', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_CfgRd7', 'Script': [43736, 43736, 43737, 47872, 47873, 47876, 43736, 43736, 43737, 48000, 47887, 47904, 43737, 48016, 47873, 48008, 43737, 47878, 47872, 47904, 43736, 43736, 43737, 48000, 47875, 48107, 43737, 48054, 47883, 48058, 43736, 43736, 43737, 47904, 47932, 48008, 43736, 43758, 47876, 47873, 43762, 47872, 43760, 43760, 43736, 43753, 19, 47878], 'ScriptLength': 48, 'ScriptNumber': 144}, {'Comment': 'Reads 64 2-byte words', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_EERd64.1', 'Script': [43737, 48054, 47883, 48058, 43736, 43736, 43758, 47876, 47873, 43762, 47872, 43760, 43760, 43753, 13, 63, 43737, 47872, 47873, 47876, 43736], 'ScriptLength': 21, 'ScriptNumber': 145}, {'Comment': 'Set NVMCON = x4001\r\nloads TBLPAG, W7 with dest address.\r\n<Set NVMADR(U) = dest addr, W5 = 0x40, only needed for row erase>\r\n', 'ScriptVersion': 2, 'UNUSED1': 0, 'ScriptName': '30_ProgMemWrPrep.1', 'Script': [43736, 43736, 43737, 47872, 47873, 47876, 43736, 43736, 43737, 47898, 47872, 47908, 43737, 47882, 47931, 48008, 43732, 47879, 43731, 47872, 43737, 48016, 47873, 48008, 43736, 43737, 47895, 47931, 48008, 43737, 47904, 47931, 48008, 43737, 47877, 47876, 47904], 'ScriptLength': 37, 'ScriptNumber': 146}, {'Comment': 'loads W0-W1 with data from dld_buffer\r\nTBLWTL W0, [W7]\r\nTBLWTH W1, [W7++]\r\nunlock NVMCON\r\nBSET NVMCON, #WR\r\nP12 = 2ms\r\nBCLR NVMCON, #WR\r\nMOV W10, NVMCON', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_ProgMemWr32.1', 'Script': [43732, 47872, 43731, 47873, 43737, 48000, 47883, 48059, 43736, 43736, 43737, 48001, 48027, 48059, 43736, 43736, 43753, 16, 31, 43737, 47960, 47877, 47904, 43737, 47928, 47931, 48008, 43737, 48041, 47882, 47904, 43737, 47929, 47931, 48008, 43737, 47969, 48103, 48040, 43736, 43736, 43736, 43736, 43751, 94, 43737, 47969, 48103, 48041, 43736, 43736, 43736, 43737, 47872, 47873, 47876, 43736, 43737, 47882, 47931, 48008], 'ScriptLength': 61, 'ScriptNumber': 147}, {'Comment': 'Set NVMCON = x4005\r\nloads TBLPAG, W7 with dest address.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_EEWrPrep.1', 'Script': [43736, 43736, 43737, 47872, 47873, 47876, 43736, 43736, 43737, 47962, 47872, 47908, 43737, 47882, 47931, 48008, 43732, 47879, 43731, 47872, 43737, 48016, 47873, 48008, 43736], 'ScriptLength': 25, 'ScriptNumber': 148}, {'Comment': 'loads W0-W1 with data from dld_buffer\r\nTBLWTL W0, [W7++]\r\nTBLWTL W1, [W7++]\r\nunlock NVMCON\r\nBSET NVMCON, #WR\r\nP12 = 2ms\r\nBCLR NVMCON, #WR\r\nMOV W10, NVMCON', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_EEWr16.1', 'Script': [43732, 47872, 43732, 47873, 43737, 48000, 47899, 48059, 43736, 43736, 43737, 48001, 47899, 48059, 43736, 43736, 43753, 16, 7, 43737, 47960, 47877, 47904, 43737, 47928, 47931, 48008, 43737, 48041, 47882, 47904, 43737, 47929, 47931, 48008, 43737, 47969, 48103, 48040, 43736, 43736, 43736, 43736, 43751, 94, 43737, 47969, 48103, 48041, 43736, 43736, 43736, 43737, 47872, 47873, 47876, 43736, 43737, 47882, 47931, 48008], 'ScriptLength': 61, 'ScriptNumber': 149}, {'Comment': 'Set NVMCON = x4008\r\nloads TBLPAG = 0xF8, W7 with dest address.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_CfgWrPrep.1', 'Script': [43736, 43736, 43737, 47872, 47873, 47876, 43736, 43736, 43737, 48010, 47872, 47908, 43737, 47882, 47931, 48008, 43732, 47879, 43739, 43737, 48001, 47887, 47904, 43737, 48017, 47873, 48008, 43736], 'ScriptLength': 28, 'ScriptNumber': 150}, {'Comment': 'loads W0 with data from dld_buffer\r\nTBLWTL W0, [W7++]\r\nunlock NVMCON\r\nBSET NVMCON, #WR\r\nP12 = 2ms\r\nBCLR NVMCON, #WR\r\nMOV W10, NVMCON', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_CfgWr7.1', 'Script': [43732, 47872, 43737, 48000, 47899, 48059, 43736, 43736, 43737, 47960, 47877, 47904, 43737, 47928, 47931, 48008, 43737, 48041, 47882, 47904, 43737, 47929, 47931, 48008, 43737, 47969, 48103, 48040, 43736, 43736, 43736, 43736, 43751, 94, 43737, 47969, 48103, 48041, 43736, 43736, 43736, 43736, 43736, 43736, 43737, 47882, 47931, 48008, 43736, 43736, 43753, 50, 6], 'ScriptLength': 53, 'ScriptNumber': 151}, {'Comment': 'For 5011, 5013\r\nSets W0 = 0x0000\r\nTBLWTL W0, [W7++]\r\nunlock NVMCON\r\nBSET NVMCON, #WR\r\nP12 = 2ms\r\nBCLR NVMCON, #WR\r\nMOV W10, NVMCON', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_CfgClear7.1', 'Script': [43737, 47872, 47872, 47904, 43737, 48000, 47899, 48059, 43736, 43736, 43737, 47960, 47877, 47904, 43737, 47928, 47931, 48008, 43737, 48041, 47882, 47904, 43737, 47929, 47931, 48008, 43737, 47969, 48103, 48040, 43736, 43736, 43736, 43736, 43751, 94, 43737, 47969, 48103, 48041, 43736, 43736, 43736, 43736, 43736, 43736, 43737, 47882, 47931, 48008, 43736, 43736, 43753, 48, 6], 'ScriptLength': 55, 'ScriptNumber': 152}, {'Comment': 'Sets address to 0x8005C0', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_UsrIDRdPrep', 'Script': [43736, 43736, 43737, 47872, 47873, 47876, 43736, 43736, 43737, 47878, 47964, 47904, 43737, 47872, 47880, 47904, 43737, 48016, 47873, 48008, 43737, 47943, 47992, 47904, 43736], 'ScriptLength': 25, 'ScriptNumber': 153}, {'Comment': 'Reads 32 3-byte words', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_UsrIDRd32.1', 'Script': [43737, 48022, 47883, 48058, 43736, 43736, 43758, 47876, 47873, 43762, 47872, 43760, 43760, 43737, 48054, 48011, 48058, 43736, 43736, 43758, 47876, 47873, 43762, 47872, 43760, 43759, 43753, 26, 31, 43737, 47872, 47873, 47876, 43736], 'ScriptLength': 34, 'ScriptNumber': 154}, {'Comment': 'Set NVMCON = x4001\r\nloads TBLPAG, W7 with address = 0x8005c0', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_UsrIDWrPrep.1', 'Script': [43736, 43736, 43737, 47872, 47873, 47876, 43736, 43736, 43737, 47898, 47872, 47908, 43737, 47882, 47931, 48008, 43737, 47879, 47964, 47904, 43737, 47872, 47880, 47904, 43737, 48016, 47873, 48008, 43736], 'ScriptLength': 29, 'ScriptNumber': 155}, {'Comment': '', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30S_CfgWrPrep', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43739, 43739, 43739, 43737, 47879, 47872, 47904, 43737, 48010, 47872, 47908], 'ScriptLength': 27, 'ScriptNumber': 156}, {'Comment': 'loop 54', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30S_CfgWr8', 'Script': [43737, 47882, 47931, 48008, 43737, 48000, 47887, 47904, 43737, 48016, 47873, 48008, 43732, 47872, 43737, 48000, 47899, 48059, 43736, 43736, 43737, 47969, 48103, 48040, 43736, 43736, 43736, 43736, 43752, 47873, 43737, 47969, 48103, 48041, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43753, 42, 47879], 'ScriptLength': 45, 'ScriptNumber': 157}, {'Comment': '', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30S_ProgMemWr32', 'Script': [43732, 47872, 43731, 47873, 43737, 48000, 47883, 48059, 43736, 43736, 43737, 48001, 48027, 48059, 43736, 43736, 43753, 16, 31, 43737, 47969, 48103, 48040, 43736, 43736, 43736, 43736, 43751, 48020, 43737, 47969, 48103, 48041, 43736, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 47882, 47931, 48008], 'ScriptLength': 46, 'ScriptNumber': 158}, {'Comment': 'Sets NVMADRU:NVMADR = 0x0080:05C0\r\nThis is the Unit ID address, so it gets erased with the Bulk Erase.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30S_ChpErasePrep', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47878, 47964, 47904, 43737, 47894, 47931, 48008, 43737, 47878, 47880, 47904, 43737, 47910, 47931, 48008], 'ScriptLength': 27, 'ScriptNumber': 159}, {'Comment': 'Set NVMCON = x4001\r\nloads TBLPAG, W7 with address = 0x8005c0', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30S_UsrIDWrPrep.1', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47898, 47872, 47908, 43737, 47882, 47931, 48008, 43737, 47879, 47964, 47904, 43737, 47872, 47880, 47904, 43737, 48016, 47873, 48008, 43736], 'ScriptLength': 32, 'ScriptNumber': 160}, {'Comment': 'LdCfg(0) LdPrgMem(2) IncAdr(6) BgnPrg(18) EndPrg(17)\r\nTprog = 1ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_DbgVctWr2Ext.3', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47875, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 47, 43758, 47878, 47895, 43751, 5, 43758, 47878, 47878, 43753, 18, 47873], 'ScriptLength': 34, 'ScriptNumber': 161}, {'Comment': 'Increments to address 1088\r\nIncAddr(06) RdPrgMem(04)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_UsrIDRd4@x440', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 47878, 43753, 47875, 63, 43758, 47878, 47878, 43758, 47878, 47876, 43760, 43760, 43753, 47880, 47875], 'ScriptLength': 32, 'ScriptNumber': 162}, {'Comment': 'increments addr to 0x440.\r\nExt timed 2ms.  \r\nTDIS= 100us\r\nIncAddr(6) LdProgMem(02) BgnProg(8) EndProg(E)', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'BL_UsrIDWr4Ext@x440', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 47878, 43753, 47875, 63, 43758, 47878, 47878, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47886, 43751, 47877, 43753, 18, 47875], 'ScriptLength': 42, 'ScriptNumber': 163}, {'Comment': 'Inc address to 0x3FF\r\nclear 3-byte address in DLBuf\r\nIncAddr(06) RdPrgMem(04)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_OSCCALRd1@x3FF', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43739, 43739, 43739, 43758, 47878, 47876, 43760, 43760], 'ScriptLength': 23, 'ScriptNumber': 164}, {'Comment': 'Inc. Addr to 0x3FF\r\nclear 3 byte address in DL buffer. \r\nExt timed 2ms. \r\nAdrInc(6) LdPrg(02) BgPrg(8) EndPrg(E)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_OSCCALWrExt@x3FF', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43739, 43739, 43739, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47886], 'ScriptLength': 31, 'ScriptNumber': 165}, {'Comment': 'Sets Cfg = 0 (so nCPSW = 0) Ext timed 2ms.\r\nDly TDIS = 100us + 100\r\nbulk erase (9). Int timed 10ms.\r\nInc PC = 0x441\r\nbulk erase(9), Int timed 10ms (erase UserIDs)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_ChpErase-519', 'Script': [43758, 47878, 47874, 43762, 47872, 43762, 47872, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47886, 43751, 10, 43758, 47878, 47881, 43752, 47874, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 15, 218, 43758, 47878, 47881, 43752, 47874], 'ScriptLength': 45, 'ScriptNumber': 166}, {'Comment': 'Advances address to 1023 \r\n- first read or write will advance to 1024 before read/write', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_EEPrep-x400', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255], 'ScriptLength': 15, 'ScriptNumber': 167}, {'Comment': 'bulk erase (9). Int timed 10ms.\r\nInc PC = 0x441\r\nbulk erase(9), Int timed 10ms (erase UserIDs)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_PMemErase-519', 'Script': [43758, 47878, 47881, 43752, 47874, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 15, 218, 43758, 47878, 47881, 43752, 47874], 'ScriptLength': 28, 'ScriptNumber': 168}, {'Comment': 'Inc PC = 0x400\r\nbulk erase (9). Int timed 10ms.\r\nInc PC = 0x441\r\nbulk erase(9), Int timed 10ms (erase UserIDs)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'BL_EEMemErase-519', 'Script': [43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43758, 47878, 47878, 43753, 12, 255, 43758, 47878, 47878, 43758, 47878, 47881, 43752, 47874], 'ScriptLength': 23, 'ScriptNumber': 169}, {'Comment': 'Sets TBLPTR = x20.00.28, sets EECON1, and writes 2 words.\r\n\r\nP9 = 2ms (1ms)\r\nP11 = 120us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_DbgVctWr2.2ms', 'Script': [43738, 47904, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47912, 47886, 43738, 48118, 47982, 43738, 48038, 48014, 43738, 48038, 48028, 43758, 47876, 47885, 43761, 43761, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 94, 43763, 47872, 43762, 47872, 43762, 47872, 43751, 47878], 'ScriptLength': 49, 'ScriptNumber': 170}, {'Comment': 'Sets TBLPTR = x20.00.28 and reads 2 words.\r\n\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_DbgVctRd2.1', 'Script': [43738, 47904, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47912, 47886, 43738, 48118, 47982, 43758, 47876, 47881, 43762, 47872, 43760, 43753, 47878, 3], 'ScriptLength': 27, 'ScriptNumber': 171}, {'Comment': 'LdCfg(0)\r\nRowErase(x11)\r\nTera = 6ms\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CfgRowErase.1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47889, 43752, 47873, 43751, 25], 'ScriptLength': 14, 'ScriptNumber': 172}, {'Comment': 'LdProg(2)\r\nBeginErase(x8). EndProg(x17)\r\nTprog2 = 2ms\r\nthen advance PC 32x', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_RowErase32.2', 'Script': [43758, 47878, 47874, 43762, 48126, 43762, 47999, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47895, 43758, 47878, 47878, 43753, 47875, 31], 'ScriptLength': 21, 'ScriptNumber': 173}, {'Comment': 'LdCfg(0)\r\nBeginErase(x8). EndProg(x17)\r\nTprog2 = 2ms\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_CfgRowErase.2', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47880, 43751, 94, 43758, 47878, 47895], 'ScriptLength': 15, 'ScriptNumber': 174}, {'Comment': '18F_PrgMemWrPrep.1\r\n- called first\r\nbsf EECON1, WREN\r\nbsf EECON1, FREE\r\n55, AA -> EECON2\r\nbsf EECON1, WR\r\nNOP\r\nDLY P10+11\r\nbcf EECON1, WREN\r\n\r\nTBLPTR += 64\r\n\r\nP10 + P11 = 5ms\r\nP10 = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_RowErase32.5ms.1', 'Script': [43738, 48038, 48004, 43738, 48038, 48008, 43738, 47957, 47886, 43738, 48039, 47982, 43738, 48042, 47886, 43738, 48039, 47982, 43738, 48038, 48002, 43738, 47872, 47872, 43752, 47873, 43738, 48038, 48020, 43738, 47936, 47886, 43738, 48118, 47910, 43738, 48088, 48048, 43738, 48119, 47914, 43738, 48088, 48048, 43738, 48120, 47914], 'ScriptLength': 47, 'ScriptNumber': 175}, {'Comment': '18F_PrgMemWrPrep.1\r\n- called first\r\nbsf EECON1, WREN\r\nbsf EECON1, FREE\r\n55, AA -> EECON2\r\nbsf EECON1, WR\r\nNOP\r\nDLY P10+11\r\nbcf EECON1, WREN\r\n\r\nP10 + P11 = 5ms\r\nP10 = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_UsrIDRowErs.5ms', 'Script': [43738, 48038, 48004, 43738, 48038, 48008, 43738, 47957, 47886, 43738, 48039, 47982, 43738, 48042, 47886, 43738, 48039, 47982, 43738, 48038, 48002, 43738, 47872, 47872, 43752, 47873, 43738, 48038, 48020], 'ScriptLength': 29, 'ScriptNumber': 176}, {'Comment': '18F_PrgMemWrPrep.1\r\n- called first\r\nbsf EECON1, WREN\r\nbsf EECON1, FREE\r\n< no eecon2 code >\r\nbsf EECON1, WR\r\nExt timing NOP\r\nP9+10\r\n\r\nTBLPTR += 64\r\n\r\nP9  = 1ms\r\nP10 = 100us', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': '18F_RowErase32.5ms.2', 'Script': [43738, 48038, 48004, 43738, 48038, 48008, 43738, 48038, 48002, 43758, 47875, 47872, 43763, 47876, 43752, 1, 43763, 47872, 43751, 5, 43762, 47872, 43762, 47872, 43738, 47936, 47886, 43738, 48118, 47910, 43738, 48088, 48048, 43738, 48119, 47914, 43738, 48088, 48048, 43738, 48120, 47914, 43751, 47943, 43738, 47872, 47872, 43738, 47872, 47872], 'ScriptLength': 50, 'ScriptNumber': 177}, {'Comment': '(must run 30_ProgMemWr32.1 1st)\r\nset NVMCON = x4071\r\nunlock NVMCON\r\nBSET NVMCON, #WR\r\nP12 = 2ms\r\nBCLR NVMCON, #WR\r\nADD W6, W5, W6\r\nBTSC SR, #C\r\nINC NVMADDRH\r\nMOV W6, NVMADR', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_RowErase32.1', 'Script': [43737, 47898, 47879, 47908, 43737, 47882, 47931, 48008, 43737, 47960, 47877, 47904, 43737, 47928, 47931, 48008, 43737, 48041, 47882, 47904, 43737, 47929, 47931, 48008, 43737, 47969, 48103, 48040, 43736, 43736, 43736, 43736, 43751, 94, 43737, 47969, 48103, 48041, 43736, 43736, 43737, 47872, 47873, 47876, 43736, 43737, 47877, 47875, 47939, 43737, 47938, 47872, 48047, 43737, 47972, 47911, 48108, 43737, 47894, 47931, 48008], 'ScriptLength': 61, 'ScriptNumber': 178}, {'Comment': 'Sets NVMADRU:NVMADR = 0x0080:05C0\r\nset NVMCON = x4071\r\nunlock NVMCON\r\nBSET NVMCON, #WR\r\nP12 = 2ms\r\nBCLR NVMCON, #WR\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_UsrIDErase.1', 'Script': [43737, 47878, 47964, 47904, 43737, 47894, 47931, 48008, 43737, 47878, 47880, 47904, 43737, 47910, 47931, 48008, 43737, 47898, 47879, 47908, 43737, 47882, 47931, 48008, 43737, 47960, 47877, 47904, 43737, 47928, 47931, 48008, 43737, 48041, 47882, 47904, 43737, 47929, 47931, 48008, 43737, 47969, 48103, 48040, 43736, 43736, 43736, 43736, 43751, 94, 43737, 47969, 48103, 48041, 43736, 43736, 43737, 47872, 47873, 47876, 43736], 'ScriptLength': 61, 'ScriptNumber': 179}, {'Comment': '(must run 30_SetAddr.1 1st)\r\nset NVMCON = x4075\r\nunlock NVMCON\r\nBSET NVMCON, #WR\r\nP12 = 2ms\r\nBCLR NVMCON, #WR\r\nADD W6, W5, W6\r\nBTSC SR, #C\r\nINC NVMADDRH\r\nMOV W6, NVMADR', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '30_EERowErase8.1', 'Script': [43737, 47962, 47879, 47908, 43737, 47882, 47931, 48008, 43737, 47960, 47877, 47904, 43737, 47928, 47931, 48008, 43737, 48041, 47882, 47904, 43737, 47929, 47931, 48008, 43737, 47969, 48103, 48040, 43736, 43736, 43736, 43736, 43751, 94, 43737, 47969, 48103, 48041, 43736, 43736, 43737, 47872, 47873, 47876, 43736, 43737, 47877, 47875, 47939, 43737, 47938, 47872, 48047, 43737, 47972, 47911, 48108, 43737, 47894, 47931, 48008], 'ScriptLength': 61, 'ScriptNumber': 180}, {'Comment': 'LdCfg(0) LdPrgMem(2) IncAdr(6) BgnPrg(8) EndPrg(E\r\nTprog = 1ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_DbgVctWr2Ext.2', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47875, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 47, 43758, 47878, 47886, 43751, 5, 43758, 47878, 47878, 43753, 18, 47873], 'ScriptLength': 34, 'ScriptNumber': 181}, {'Comment': 'Shuts off Vdd at start then turns on after 100ms delay & Vpp enabled.\r\nCANNOT BE USED WITH TARGET POWER!\r\nStandard 12V Vpp\r\n100ms delay after entering.\r\nDrop Vpp & retake high to try entry on parts with internal MCLR & osc, and ICSP pin(s) high outputs.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'HVProgEntryVpp1st', 'Script': [43770, 43767, 43774, 43773, 43769, 43765, 43763, 47872, 43752, 20, 43766, 43771, 43772, 43775, 43751, 127, 43767, 43770, 43771, 43766, 43752, 19], 'ScriptLength': 22, 'ScriptNumber': 182}, {'Comment': 'No Comment', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'DoNothing', 'Script': [43747], 'ScriptLength': 1, 'ScriptNumber': 183}, {'Comment': 'For HCS200,201,300,301,320\r\nTps = 4ms\r\nTph1= 4ms\r\nTph2 = 64us\r\nTpbw = 4ms\r\nTwc = 50ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'HCS_Write12', 'Script': [43765, 43754, 100, 43763, 47872, 43752, 10, 43763, 47876, 43751, 188, 43763, 47884, 43751, 188, 43763, 47876, 43751, 47875, 43763, 47872, 43751, 188, 43728, 47880, 43728, 47880, 43752, 10, 43753, 47878, 11, 43764], 'ScriptLength': 33, 'ScriptNumber': 184}, {'Comment': '', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'HCS_Verify12', 'Script': [43765, 43754, 100, 43734, 43734, 43753, 47874, 11, 43764, 43763, 47875], 'ScriptLength': 11, 'ScriptNumber': 185}, {'Comment': 'For HCS362\r\nTps = 4ms\r\nTph1= 4ms\r\nTph2 = 64us\r\nTpbw = 4ms\r\nTwc = 50ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'HCS_Write18', 'Script': [43765, 43754, 100, 43763, 47872, 43752, 10, 43763, 47876, 43751, 188, 43763, 47884, 43751, 188, 43763, 47876, 43751, 47875, 43763, 47872, 43751, 188, 43728, 47880, 43728, 47880, 43752, 10, 43753, 47878, 17, 43764], 'ScriptLength': 33, 'ScriptNumber': 186}, {'Comment': 'For HCS362', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'HCS_Verify18', 'Script': [43765, 43754, 100, 43734, 43734, 43753, 47874, 17, 43764, 43763, 47875], 'ScriptLength': 11, 'ScriptNumber': 187}, {'Comment': 'SW must set S1 via VPP, data for bit 0, and lower clock for first bit.  Also must fill buffer with complemented words, and shift first byte by 1.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'HCS_Write360-361', 'Script': [43754, 100, 43728, 47879, 43728, 47880, 43728, 47880, 43728, 47880, 43763, 47878, 43752, 10, 43763, 47872, 43728, 47880, 43728, 47880, 43728, 47880, 43728, 47880, 43763, 47878, 43752, 47888, 43763, 47872, 43753, 14, 10, 43764], 'ScriptLength': 34, 'ScriptNumber': 188}, {'Comment': 'For HCS360 and 361 parts.  Starts up PWM, but leaves VPP = GND', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'HCS_VPPSetup', 'Script': [43739, 43739, 43739, 43765, 43770, 43767, 43769, 43763, 47872, 43752, 20, 43754, 100, 43763, 47872, 43752, 10, 43763, 47876, 43751, 178, 43763, 47884, 43752, 47873], 'ScriptLength': 25, 'ScriptNumber': 189}, {'Comment': 'shuts off VPP', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'HCS_Verify360-361', 'Script': [43765, 43754, 100, 43734, 43734, 43753, 47874, 11, 43763, 47875, 43770, 43767, 43768, 43764], 'ScriptLength': 14, 'ScriptNumber': 190}, {'Comment': 'BUSY on, setup pins', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_ProgEntry', 'Script': [43765, 43763, 47878, 43727, 47873, 43752, 47874], 'ScriptLength': 7, 'ScriptNumber': 191}, {'Comment': 'BUSY off, reset pins', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_ProgExit', 'Script': [43764, 43763, 47875, 43727, 47873, 43752, 47874], 'ScriptLength': 7, 'ScriptNumber': 192}, {'Comment': 'for devices with 1 address byte following the control byte.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_RdPrep1Adr', 'Script': [43725, 43722, 43739, 43722], 'ScriptLength': 4, 'ScriptNumber': 193}, {'Comment': 'sequential read 64 bytes', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_Rd64', 'Script': [43725, 43722, 43739, 43739, 43721, 43721, 43721, 43721, 43753, 47876, 14, 43721, 43721, 43721, 43720, 43724], 'ScriptLength': 16, 'ScriptNumber': 194}, {'Comment': 'Write x8 with 1 address word following the control byte.\r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_Wr8Adr1.5ms', 'Script': [43725, 43722, 43739, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43724, 43751, 235], 'ScriptLength': 15, 'ScriptNumber': 195}, {'Comment': 'for devices with 2 address bytes following the control byte.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_RdPrep2Adr', 'Script': [43725, 43722, 43722, 43722], 'ScriptLength': 4, 'ScriptNumber': 196}, {'Comment': 'Write x32 with 2 address words following the control byte.\r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_Wr32Adr2.5ms', 'Script': [43725, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43753, 47880, 47875, 43724, 43751, 235], 'ScriptLength': 18, 'ScriptNumber': 197}, {'Comment': 'Write x1 with 1 address word following the control byte.\r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_Wr1Adr1.5ms', 'Script': [43725, 43722, 43739, 43722, 43722, 43724, 43751, 235], 'ScriptLength': 8, 'ScriptNumber': 198}, {'Comment': 'sequential read 16 bytes', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_Rd16', 'Script': [43725, 43722, 43739, 43739, 43721, 43721, 43721, 43721, 43753, 47876, 2, 43721, 43721, 43721, 43720, 43724], 'ScriptLength': 16, 'ScriptNumber': 199}, {'Comment': 'Write x16 with 1 address word following the control byte.\r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_Wr16Adr1.5ms', 'Script': [43725, 43722, 43739, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43753, 47880, 47873, 43724, 43751, 235], 'ScriptLength': 18, 'ScriptNumber': 200}, {'Comment': 'Start VPP - used for nCS\r\nPGC = out (SCK)\r\nPGD = in (SI)\r\nAUX = out (SO)\r\nWrite Status Reg to clear all BPx bits.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE25_ProgEntry', 'Script': [43770, 43767, 43769, 43765, 43763, 47874, 43727, 47872, 43752, 20, 43766, 43771, 43752, 10, 43770, 43767, 43719, 47878, 43772, 43771, 43751, 47873, 43770, 43767, 43719, 47873, 43719, 47872, 43766, 43771, 43751, 235], 'ScriptLength': 32, 'ScriptNumber': 201}, {'Comment': 'VPP off, all pins to inputs.', 'ScriptVersion': 4, 'UNUSED1': 0, 'ScriptName': 'EE25_ProgExit', 'Script': [43770, 43767, 43768, 43763, 47875, 43727, 47873, 43752, 10, 43764], 'ScriptLength': 10, 'ScriptNumber': 202}, {'Comment': 'Read 64 bytes for devices with 1 address byte.  Expects address in buffer.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE25_Rd64Adr1', 'Script': [43770, 43767, 43718, 43739, 43718, 43717, 43717, 43717, 43717, 43717, 43717, 43717, 43717, 43753, 47880, 47879, 43766, 43771], 'ScriptLength': 18, 'ScriptNumber': 203}, {'Comment': 'Sends WREN first\r\nwrite x16 with 1 address byte.\r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE25_Wr16Adr1.5ms', 'Script': [43770, 43767, 43719, 47878, 43766, 43771, 43751, 47873, 43770, 43767, 43718, 43739, 43718, 43718, 43718, 43718, 43718, 43753, 47876, 47875, 43766, 43771, 43751, 235], 'ScriptLength': 24, 'ScriptNumber': 204}, {'Comment': 'Sends WREN first\r\nwrite x16 with 2 address bytes.\r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE25_Wr16Adr2.5ms', 'Script': [43770, 43767, 43719, 47878, 43766, 43771, 43751, 47873, 43770, 43767, 43718, 43718, 43718, 43718, 43718, 43718, 43718, 43753, 47876, 47875, 43766, 43771, 43751, 235], 'ScriptLength': 24, 'ScriptNumber': 205}, {'Comment': 'Read 64 bytes for devices with 2 address bytes.  Expects address in buffer.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE25_Rd64Adr2', 'Script': [43770, 43767, 43718, 43718, 43718, 43717, 43717, 43717, 43717, 43717, 43717, 43717, 43717, 43753, 47880, 47879, 43766, 43771], 'ScriptLength': 18, 'ScriptNumber': 206}, {'Comment': 'Start VPP - used for CS\r\nPGC = out (SCK)\r\nPGD = in (DI)\r\nAUX = out (DO)\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE93_ProgEntry', 'Script': [43770, 43767, 43769, 43765, 43763, 47874, 43727, 47872, 43752, 20], 'ScriptLength': 10, 'ScriptNumber': 207}, {'Comment': 'Read 8 bytes for devices with 2 address bytes.  Expects address in buffer.\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE93_Rd8Adr2.8', 'Script': [43766, 43771, 43739, 43718, 43718, 43717, 43753, 47873, 7, 43770, 43767], 'ScriptLength': 11, 'ScriptNumber': 208}, {'Comment': 'Issues EWEN command\r\nformatted for 93LC86A.  All others will see extra clocks.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE93_PrgMemWrPrep', 'Script': [43766, 43771, 43719, 47910, 43719, 47872, 43770, 43767], 'ScriptLength': 8, 'ScriptNumber': 209}, {'Comment': 'Writes one byte.\r\nTwc = 6ms\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE93_PrgMemWr1A2.8', 'Script': [43766, 43771, 43739, 43718, 43718, 43718, 43770, 43767, 43752, 47873, 43751, 26], 'ScriptLength': 12, 'ScriptNumber': 210}, {'Comment': 'Issues EWEN & ERAL commands\r\nformatted for 93LC86A.  All others will see extra clocks.\r\nTec = 6ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE93_ChpErase', 'Script': [43766, 43771, 43719, 47910, 43719, 47872, 43770, 43767, 43751, 47877, 43766, 43771, 43719, 47908, 43719, 47872, 43770, 43767, 43752, 47874], 'ScriptLength': 20, 'ScriptNumber': 211}, {'Comment': 'Read 1 word for devices with 2 address bytes.  Expects address in buffer.\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE93_Rd1Adr2.16', 'Script': [43766, 43771, 43739, 43718, 43718, 43717, 43717, 43770, 43767], 'ScriptLength': 9, 'ScriptNumber': 212}, {'Comment': 'Writes one word.\r\nTwc = 6ms\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE93_PrgMemWr1A2.16', 'Script': [43766, 43771, 43739, 43718, 43718, 43718, 43718, 43770, 43767, 43752, 47873, 43751, 49], 'ScriptLength': 13, 'ScriptNumber': 213}, {'Comment': 'Write x64with 2 address words following the control byte.\r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_Wr64Adr2.5ms', 'Script': [43725, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43753, 47880, 47879, 43724, 43751, 235], 'ScriptLength': 18, 'ScriptNumber': 214}, {'Comment': 'Write x128 with 2 address words following the control byte.\r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE24_Wr128Adr2.5ms', 'Script': [43725, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43722, 43753, 47880, 15, 43724, 43751, 235], 'ScriptLength': 18, 'ScriptNumber': 215}, {'Comment': 'Sends WREN first\r\nwrite x32 with 2 address bytes.\r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE25_Wr32Adr2.5ms', 'Script': [43770, 43767, 43719, 47878, 43766, 43771, 43751, 47873, 43770, 43767, 43718, 43718, 43718, 43718, 43718, 43718, 43718, 43753, 47876, 47879, 43766, 43771, 43751, 235], 'ScriptLength': 24, 'ScriptNumber': 216}, {'Comment': 'Sends WREN first\r\nwrite x64 with 2 address bytes.\r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE25_Wr64Adr2.5ms', 'Script': [43770, 43767, 43719, 47878, 43766, 43771, 43751, 47873, 43770, 43767, 43718, 43718, 43718, 43718, 43718, 43718, 43718, 43753, 47876, 15, 43766, 43771, 43751, 235], 'ScriptLength': 24, 'ScriptNumber': 217}, {'Comment': 'Sends WREN first\r\nwrite x128 with 3 address bytes. - Instruction byte does not come from buffer.\r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE25_Wr128Adr3.5ms', 'Script': [43770, 43767, 43719, 47878, 43766, 43771, 43751, 47873, 43770, 43767, 43719, 47874, 43718, 43718, 43718, 43718, 43718, 43718, 43718, 43753, 47876, 31, 43766, 43771, 43751, 235], 'ScriptLength': 26, 'ScriptNumber': 218}, {'Comment': 'Read 64 bytes for devices with 3 address bytes.  Expects address in buffer, but not instruction byte.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE25_Rd64Adr3', 'Script': [43770, 43767, 43719, 47875, 43718, 43718, 43718, 43717, 43717, 43717, 43717, 43717, 43717, 43717, 43717, 43753, 47880, 7, 43766, 43771], 'ScriptLength': 20, 'ScriptNumber': 219}, {'Comment': 'Wr 2 Words Int timed 4ms to 0x2004 and 0x2005. \r\nLoadCfg(0) AddInc(6) LdProg(2) BgnProg(18)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_DbgVctWr2Int.3', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47875, 43758, 47878, 2, 43761, 43761, 43758, 47878, 47896, 43751, 188, 43758, 47878, 47878, 43753, 13, 47873], 'ScriptLength': 29, 'ScriptNumber': 220}, {'Comment': 'LdCfg(0) LdPrgMem(2) IncAdr(6) BgnPrg(18) EndPrg(E)\r\nTprog = 2.5ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_DbgVctWr2Ext.4', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47875, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 118, 43758, 47878, 47886, 43751, 5, 43758, 47878, 47878, 43753, 18, 47873], 'ScriptLength': 34, 'ScriptNumber': 221}, {'Comment': 'ICSPCLK drop halt', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': 'DBG_Halt.BL', 'Script': [43763, 47878, 43751, 47, 43763, 47874, 43751, 5], 'ScriptLength': 8, 'ScriptNumber': 222}, {'Comment': 'Target run - cmd 19', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'DBG_Run.BL', 'Script': [43765, 43713, 47897, 43714, 43764, 43750, 47872, 47876, 43747, 43714], 'ScriptLength': 10, 'ScriptNumber': 223}, {'Comment': 'Read debug exec version cmd 02', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'DBG_RdDEVer.BL', 'Script': [43765, 43713, 47874, 43714, 43750, 47872, 47877, 43714, 43714, 43714, 43764], 'ScriptLength': 11, 'ScriptNumber': 224}, {'Comment': 'Single Step cmd 1A', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'DBG_SStep.BL', 'Script': [43765, 43713, 47898, 43714, 43764, 43750, 47872, 47876, 43747, 43714], 'ScriptLength': 10, 'ScriptNumber': 225}, {'Comment': 'Bulk Write Data cmd 04', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'DBG_BulkWrData.BL', 'Script': [43765, 43713, 47876, 43714, 43750, 47872, 12, 43712, 43712, 43712, 43712, 43712, 43741, 47873, 43764, 43747, 43714, 43764], 'ScriptLength': 18, 'ScriptNumber': 226}, {'Comment': 'Bulk Read Data cmd 03', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'DBG_BulkRdData.BL', 'Script': [43765, 43713, 47875, 43714, 43750, 47872, 12, 43712, 43712, 43712, 43712, 43714, 43741, 47873, 43764, 43747, 43714, 43764], 'ScriptLength': 18, 'ScriptNumber': 227}, {'Comment': 'Sends WREN first\r\nwrite x128 with 2 address bytes. \r\nTwc = 5ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE25_Wr128Adr2.5ms', 'Script': [43770, 43767, 43719, 47878, 43766, 43771, 43751, 47873, 43770, 43767, 43718, 43718, 43718, 43718, 43718, 43718, 43718, 43753, 47876, 31, 43766, 43771, 43751, 235], 'ScriptLength': 24, 'ScriptNumber': 228}, {'Comment': 'Shuts off Vdd at start then turns on after 300ms delay. Vpp enabled immediately after.\r\nUsed for PIC18 as "VPP1st" as not all parts support actual VPP1st\r\nCANNOT BE USED WITH TARGET POWER!\r\nStandard 12V Vpp\r\n100ms delay after entering.\r\nDrop Vpp & retake high to try entry on parts with internal MCLR & osc, and ICSP pin(s) high outputs.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'HVProgEntryVppClose', 'Script': [43770, 43767, 43774, 43773, 43769, 43765, 43763, 47872, 43752, 60, 43772, 43775, 43766, 43771, 43751, 127, 43767, 43770, 43771, 43766, 43752, 19], 'ScriptLength': 22, 'ScriptNumber': 229}, {'Comment': '3 byte address Set in DL Buffer. RstAddr(16) AdrInc(06)\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MRE_AddrSet.1', 'Script': [43758, 47878, 47894, 43748, 47877, 43758, 47878, 47878, 43741, 47875, 43739], 'ScriptLength': 11, 'ScriptNumber': 230}, {'Comment': 'Erase all flash progmem (09), including Cal Words NOT EE, int timed 10ms.\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MRE_72xErase', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47881, 43752, 47874], 'ScriptLength': 12, 'ScriptNumber': 231}, {'Comment': 'RowErase(x11)\r\nTera = 6ms\r\nthen advance PC 32x', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MRE_RowErase32.1', 'Script': [43758, 47878, 47889, 43752, 47873, 43751, 25, 43758, 47878, 47878, 43753, 47875, 31], 'ScriptLength': 13, 'ScriptNumber': 232}, {'Comment': 'mov #80, W0\r\nmov W0, TBLPAG\r\nmov #0, W0\r\nTBLWTL W0, [W0]\r\n2x NOP\r\nmov #4042, W10\r\nmov W10, NVMCON\r\nBSET.b NVMCON+1, #7\r\n256 NOPs ~13ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '24_ExecErase450ms.1', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 47872, 47880, 47904, 43737, 48016, 47873, 48008, 43737, 47872, 47872, 47904, 43737, 47872, 47880, 48059, 43736, 43736, 43737, 47914, 47876, 47908, 43737, 47882, 47931, 48008, 43737, 47969, 48103, 48040, 43736, 43737, 47872, 47874, 47876, 43736, 43753, 47873, 47872, 43752, 80], 'ScriptLength': 57, 'ScriptNumber': 233}, {'Comment': 'Bulk Write Emulation cmd 1D', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'DBG_BulkWrEmul.1', 'Script': [43765, 43743, 47901, 43744, 43750, 47872, 12, 43742, 43742, 43742, 43742, 43742, 43741, 47873, 43764, 43747, 43744, 43764], 'ScriptLength': 18, 'ScriptNumber': 234}, {'Comment': 'Bulk Read Emulation cmd 1C', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'DBG_BulkRdEmul.1', 'Script': [43765, 43743, 47900, 43744, 43750, 47872, 12, 43742, 43742, 43742, 43742, 43744, 43741, 47873, 43764, 43747, 43744, 43764], 'ScriptLength': 18, 'ScriptNumber': 235}, {'Comment': '(writes LSB, incf TBLPTRL, writes MSB, incf TBLPTRL) x 7\r\n\r\nP9A = 5ms\r\nP10 = 120us', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': '18F_CfgWr7_5ms', 'Script': [43738, 48038, 48004, 43758, 47876, 47887, 43761, 43762, 47872, 43758, 47875, 47872, 43763, 47876, 43752, 1, 43763, 47872, 43751, 12, 43762, 47872, 43762, 47872, 43738, 47872, 47872, 43738, 48118, 47914, 43758, 47876, 47887, 43762, 47872, 43761, 43758, 47875, 47872, 43763, 47876, 43752, 1, 43763, 47872, 43751, 47890, 43762, 47872, 43762, 47872, 43738, 47872, 47872, 43738, 48118, 47914, 43753, 54, 6], 'ScriptLength': 60, 'ScriptNumber': 236}, {'Comment': 'TBLPTR = 0x200028\r\nCLRF EECON1\r\nBSF EEC1, FREE\r\nBSF EEC1, WREN\r\nBSF EEC1, WR\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18J_ExecErase400ms', 'Script': [43738, 47904, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47912, 47886, 43738, 48118, 47982, 43738, 48038, 47978, 43738, 48038, 48008, 43738, 48038, 48004, 43738, 48038, 48002, 43758, 47876, 47872, 43752, 74, 43762, 47872, 43762, 47872, 43752, 47897, 43738, 47872, 47872], 'ScriptLength': 44, 'ScriptNumber': 237}, {'Comment': 'BUSY on, setup pins, pulse AUX, then StandbyPulse on AUX\r\nNOTE: on SET_AUX, LAT is set first, then TRIS, so leave LAT =1 when setting INPUT', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE11_ProgEntry', 'Script': [43765, 43763, 47875, 43727, 47872, 43751, 47877, 43727, 47874, 43752, 47873, 43727, 47875], 'ScriptLength': 13, 'ScriptNumber': 238}, {'Comment': 'Read 32 bytes.  Note cmd & addr bytes to transmit for READ (total 3) expected in DL buffer.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE11_Read32', 'Script': [43709, 48032, 3, 32], 'ScriptLength': 4, 'ScriptNumber': 239}, {'Comment': 'executes a WRDI for the purpose of generating a SAK or NoSAK.\r\n\r\nPops 3 "address" bytes from buffer', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE11_BusCheck', 'Script': [43739, 43739, 43739, 43730, 48017, 43710, 48032, 47873], 'ScriptLength': 8, 'ScriptNumber': 240}, {'Comment': 'Send WREN, then WRITE.  Expect bytes in DL buffer as:\r\nWREN cmd\r\nWRITE cmd\r\nADDR MSB\r\nADDR LSB\r\nData 1\r\n..\r\nData 16\r\nNOTE: UNIO commands include TSS.\r\n\r\nTWC = 5ms\r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE11_Write16', 'Script': [43710, 48032, 47873, 43710, 48032, 19, 43752, 47873], 'ScriptLength': 8, 'ScriptNumber': 241}, {'Comment': 'Assumes no data in DL buffer\r\nExecutes WREN & SETAL\r\nTWC = 10ms\r\n(TSS part of UNIO cmds)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'EE11_ChpErase', 'Script': [43730, 48022, 43730, 47975, 43710, 48032, 47873, 43710, 48032, 47873, 43752, 47874], 'ScriptLength': 12, 'ScriptNumber': 242}, {'Comment': 'PIC32MX code sequence\r\n4D434850\r\n500us MCLR pulse\r\nDelay 1ms after first MCLR high pulse (P19)\r\nfor RESET sync\r\nDelay 5ms\r\nPGD = inpt, SETMODE 6b011111\r\nMCHP_STATUS byte in Upload buffer', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': '32MX_ProgEntry', 'Script': [43770, 43767, 43769, 43765, 43763, 47872, 43752, 20, 43766, 43771, 43751, 23, 43770, 43767, 43751, 47, 43762, 48050, 43762, 48066, 43762, 47890, 43762, 47882, 43766, 43771, 43751, 235, 43763, 47874, 43708, 47878, 47903, 43707, 47876, 43707, 47879, 43706, 47872], 'ScriptLength': 39, 'ScriptNumber': 243}, {'Comment': 'SetMode(5b11111)\r\npulse PGC\r\nEnsure /MCLR for 50ms,\r\nleave /MCLR enabled.', 'ScriptVersion': 4, 'UNUSED1': 0, 'ScriptName': '32MX_ProgExit1', 'Script': [43708, 47877, 47903, 43770, 43767, 43768, 43763, 47878, 43763, 47874, 43763, 47875, 43752, 10, 43764], 'ScriptLength': 15, 'ScriptNumber': 244}, {'Comment': "SendCMD(MTAP_SW_MTAP)\r\nSendCMD(MTAP_IDCODE)\r\nXferData(32'h0)", 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '32MX_DevIDRd', 'Script': [43707, 47876, 43707, 47873, 43705, 47872, 47872, 47872, 47872], 'ScriptLength': 9, 'ScriptNumber': 245}, {'Comment': 'Uses PE comamnd 01h to read 32 words.  Needs 32-bit address in DL buffer.\r\nNOTE: PE resp is dumped', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '32MX_PrgMemRd32', 'Script': [43707, 47886, 43704, 32, 47872, 47873, 47872, 43703, 43700, 43701, 43753, 47873, 31], 'ScriptLength': 13, 'ScriptNumber': 246}, {'Comment': 'Uses JTAG erase cmd, not PE\r\nSendCMD(MTAP_CMD)\r\nXferdata(MCHP_ERASE)\r\nP11 = 400ms', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '32MX_ChpEraseJT', 'Script': [43707, 47879, 43706, 48124, 43752, 74], 'ScriptLength': 6, 'ScriptNumber': 247}, {'Comment': 'SendCmd(ETAP_FASTDATA)\r\ndownloads 64 words (256 bytes) to the PIC32, which is half a row.\r\nNOTE: does not include PE PROGRAM header.  ', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '32MX_FlashWrPrep64', 'Script': [43707, 47886, 43703, 43753, 47873, 63], 'ScriptLength': 6, 'ScriptNumber': 248}, {'Comment': 'downloads 64 words (256 bytes) to the PIC32, which is half a row (should be 2nd half) then gets PE response \r\n', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '32MX_FlashWr64', 'Script': [43703, 43753, 47873, 63, 43699], 'ScriptLength': 5, 'ScriptNumber': 249}, {'Comment': 'LdCfg(0) LdPrgM(2) IncAdr(6) BgnPrg(18) EndPrg(A)\r\nTprog = 2.5ms\r\nTDIS = 100us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MR_DbgVecWr2Ext.1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47875, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47896, 43751, 118, 43758, 47878, 47882, 43751, 47877, 43758, 47878, 47878, 43753, 18, 47873], 'ScriptLength': 34, 'ScriptNumber': 250}, {'Comment': 'Read 1 word\r\nrd(04) addrinc(06)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MCP_ProgMemRd1', 'Script': [43758, 47878, 47876, 43760, 43760, 43758, 47878, 47878], 'ScriptLength': 8, 'ScriptNumber': 251}, {'Comment': 'Inc Addr (06) 16x', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MCP_ProgMemRdPrep', 'Script': [43758, 47878, 47878, 43753, 47875, 47887, 43739, 43739, 43739], 'ScriptLength': 9, 'ScriptNumber': 252}, {'Comment': 'Ext Timed 128us\r\nIncAddr(06) LdProgMem(02) BgnProg(8) EndPrg(E)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MCP_PrgMemWr1Ext', 'Script': [43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 5, 43758, 47878, 47886, 43758, 47878, 47878], 'ScriptLength': 16, 'ScriptNumber': 253}, {'Comment': 'loads 4 words, then programs, then advances pointer.\r\n\r\nP9 = 2ms.\r\nP10 = 120us', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_ProgMemWr4.2ms', 'Script': [43758, 47876, 47885, 43761, 43761, 43753, 47877, 2, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 94, 43763, 47872, 43751, 47878, 43762, 47872, 43762, 47872, 43758, 47876, 47885, 43762, 48127, 43762, 48127], 'ScriptLength': 35, 'ScriptNumber': 254}, {'Comment': 'Erases 2 pages\r\nmov #80, W0\r\nmov W0, TBLPAG\r\nmov #0, W0\r\nX:TBLWTL W0, [W0]\r\n2x NOP\r\nmov #4042, W10\r\nmov W10, NVMCON\r\nBSET.b NVMCON+1, #7\r\n256 NOPs ~13ms\r\nmov #0x400, W0\r\nLoop X:', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '24_ExecErase50ms.2', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43737, 47872, 47880, 47904, 43737, 48016, 47873, 48008, 43737, 47872, 47872, 47904, 43737, 47872, 47880, 48059, 43736, 43736, 43737, 47914, 47876, 47908, 43737, 47882, 47931, 48008, 43737, 47969, 48103, 48040, 43736, 43737, 47872, 47874, 47876, 43736, 43753, 47873, 47872, 43752, 7, 43737, 47872, 47936, 47904, 43730, 47873, 43730, 47872, 43741, 37], 'ScriptLength': 60, 'ScriptNumber': 255}, {'Comment': 'dsPIC33/PIC24H read 2 UserID bytes.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '33_UserIDRd2', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 48000, 47887, 47904, 43737, 48016, 47873, 48008, 43737, 47878, 47873, 47904, 43737, 47943, 47992, 47904, 43736, 43737, 48054, 47883, 48058, 43736, 43736, 43758, 47876, 47873, 43762, 47872, 43734, 43759, 43753, 13, 47873, 43737, 47872, 47874, 47876, 43736], 'ScriptLength': 54, 'ScriptNumber': 256}, {'Comment': 'Writes 2 User IDs for dsPIC33/PIC24H\r\nExt timed programming 30ms.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '33_UsrIDWr2', 'Script': [43737, 47872, 47874, 47876, 43737, 47872, 47874, 47876, 43736, 43736, 43736, 43737, 47872, 47874, 47876, 43736, 43737, 47879, 47873, 47904, 43737, 47882, 47872, 47908, 43737, 47882, 47931, 48008, 43737, 48000, 47887, 47904, 43737, 48016, 47873, 48008, 43731, 47872, 43737, 48000, 47899, 48059, 43736, 43736, 43737, 47969, 48103, 48040, 43736, 43736, 43752, 47878, 43737, 47969, 48103, 48041, 43736, 43753, 21, 47873], 'ScriptLength': 60, 'ScriptNumber': 257}, {'Comment': 'loads 32 words, then programs, then advances pointer.\r\n\r\nP9 = 1ms.\r\nP10 = 400ns', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18J_PrgMemWr32.1ms', 'Script': [43758, 47876, 47885, 43761, 43761, 43753, 47877, 30, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 47, 43763, 47872, 43762, 47872, 43762, 47872, 43758, 47876, 47885, 43762, 48127, 43762, 48127], 'ScriptLength': 33, 'ScriptNumber': 258}, {'Comment': 'writes 0x8F8F to 0x3C.00.04 - 05\r\n\r\nP11 = 5ms', 'ScriptVersion': 1, 'UNUSED1': 0, 'ScriptName': '18F_ChpErase.x8F8F', 'Script': [43738, 47932, 47886, 43738, 48120, 47982, 43738, 47872, 47886, 43738, 48119, 47982, 43738, 47877, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 48015, 43762, 48015, 43738, 47876, 47886, 43738, 48118, 47982, 43758, 47876, 47884, 43762, 48015, 43762, 48015, 43738, 47872, 47872, 43758, 47876, 47872, 43752, 47873, 43762, 47872, 43762, 47872], 'ScriptLength': 50, 'ScriptNumber': 259}, {'Comment': 'Erase all flash progmem (09), including Cal Words NOT EE, int timed 10ms.\r\nErase & write Cal @2009\r\nErase & write Cal @200A', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MRE_CalWrdsErWr193x', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47880, 43758, 47878, 47881, 43752, 47874, 43758, 47878, 47874, 43761, 43761, 43758, 47878, 47880, 43751, 250, 43758, 47878, 47878, 43753, 18, 47873], 'ScriptLength': 34, 'ScriptNumber': 260}, {'Comment': 'Wr 2 Words Int timed 3ms to 0x8004 and 0x8005. \r\nLoadCfg(0) AddInc(6) LdProg(2) BgnProg(8)', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': 'MRE_DbgVctWr2Int.1', 'Script': [43758, 47878, 47872, 43762, 47872, 43762, 47872, 43758, 47878, 47878, 43753, 47875, 47875, 43758, 47878, 2, 43761, 43761, 43758, 47878, 47880, 43751, 141, 43758, 47878, 47878, 43753, 13, 47873], 'ScriptLength': 29, 'ScriptNumber': 261}, {'Comment': '1 byte EE write. EEDATA = byte\r\nEECON1, WREN\r\nEECON1, WR\r\n200 NOP\r\nincf EEADR\r\nP11=5ms ', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_EEWr1SmallNOPs', 'Script': [43758, 47876, 47872, 43761, 43762, 47886, 43738, 48040, 47982, 43738, 48038, 48004, 43738, 48038, 48002, 43738, 47872, 47872, 43738, 47872, 47872, 43753, 47878, 99, 43763, 47872, 43751, 10, 43738, 48041, 47914], 'ScriptLength': 31, 'ScriptNumber': 262}, {'Comment': 'Sets EECON1, RD, moves EEDATA -> TABLAT\r\n*NOP*\r\nshifts out, increments EEADDR.', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18F_EERd32Small.2', 'Script': [43738, 48038, 48000, 43738, 48040, 47952, 43738, 48117, 47982, 43738, 47872, 47872, 43758, 47876, 47874, 43762, 47872, 43760, 43738, 48041, 47914, 43753, 21, 31], 'ScriptLength': 24, 'ScriptNumber': 263}, {'Comment': 'loads 32 words, then programs, then advances pointer.\r\n\r\nP9 = 3ms.\r\nP10 = 400ns', 'ScriptVersion': 0, 'UNUSED1': 0, 'ScriptName': '18J_PrgMemWr32.3ms', 'Script': [43758, 47876, 47885, 43761, 43761, 43753, 47877, 30, 43758, 47876, 47887, 43761, 43761, 43758, 47875, 47872, 43763, 47876, 43751, 140, 43763, 47872, 43762, 47872, 43762, 47872, 43758, 47876, 47885, 43762, 48127, 43762, 48127], 'ScriptLength': 33, 'ScriptNumber': 264}]
